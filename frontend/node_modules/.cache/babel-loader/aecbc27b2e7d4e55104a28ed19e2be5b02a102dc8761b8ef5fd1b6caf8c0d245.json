{"ast":null,"code":"var _excluded = [\"width\", \"height\", \"className\", \"style\", \"children\", \"type\"];\nfunction _objectWithoutProperties(e, t) {\n  if (null == e) return {};\n  var o,\n    r,\n    i = _objectWithoutPropertiesLoose(e, t);\n  if (Object.getOwnPropertySymbols) {\n    var n = Object.getOwnPropertySymbols(e);\n    for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n  }\n  return i;\n}\nfunction _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (-1 !== e.indexOf(n)) continue;\n    t[n] = r[n];\n  }\n  return t;\n}\nfunction _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nimport * as React from 'react';\nimport { PureComponent, useCallback, useState } from 'react';\nimport omit from 'es-toolkit/compat/omit';\nimport get from 'es-toolkit/compat/get';\nimport { Layer } from '../container/Layer';\nimport { Surface } from '../container/Surface';\nimport { Polygon } from '../shape/Polygon';\nimport { Rectangle } from '../shape/Rectangle';\nimport { getValueByDataKey } from '../util/ChartUtils';\nimport { COLOR_PANEL } from '../util/Constants';\nimport { isNan, uniqueId } from '../util/DataUtils';\nimport { getStringSize } from '../util/DOMUtils';\nimport { Global } from '../util/Global';\nimport { ReportChartMargin, useChartHeight, useChartWidth } from '../context/chartLayoutContext';\nimport { TooltipPortalContext } from '../context/tooltipPortalContext';\nimport { RechartsWrapper } from './RechartsWrapper';\nimport { setActiveClickItemIndex, setActiveMouseOverItemIndex } from '../state/tooltipSlice';\nimport { SetTooltipEntrySettings } from '../state/SetTooltipEntrySettings';\nimport { RechartsStoreProvider } from '../state/RechartsStoreProvider';\nimport { useAppDispatch } from '../state/hooks';\nimport { isPositiveNumber } from '../util/isWellBehavedNumber';\nimport { svgPropertiesNoEvents } from '../util/svgPropertiesNoEvents';\nimport { CSSTransitionAnimate } from '../animation/CSSTransitionAnimate';\nimport { resolveDefaultProps } from '../util/resolveDefaultProps';\nvar NODE_VALUE_KEY = 'value';\n\n/**\n * This is what end users defines as `data` on Treemap.\n */\n\n/**\n * This is what is returned from `squarify`, the final treemap data structure\n * that gets rendered and is stored in\n */\n\nexport var treemapPayloadSearcher = (data, activeIndex) => {\n  if (!data || !activeIndex) {\n    return undefined;\n  }\n  return get(data, activeIndex);\n};\nexport var addToTreemapNodeIndex = function addToTreemapNodeIndex(indexInChildrenArr) {\n  var activeTooltipIndexSoFar = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  return \"\".concat(activeTooltipIndexSoFar, \"children[\").concat(indexInChildrenArr, \"]\");\n};\nvar options = {\n  chartName: 'Treemap',\n  defaultTooltipEventType: 'item',\n  validateTooltipEventTypes: ['item'],\n  tooltipPayloadSearcher: treemapPayloadSearcher,\n  eventEmitter: undefined\n};\nexport var computeNode = _ref => {\n  var {\n    depth,\n    node,\n    index,\n    dataKey,\n    nameKey,\n    nestedActiveTooltipIndex\n  } = _ref;\n  var currentTooltipIndex = depth === 0 ? '' : addToTreemapNodeIndex(index, nestedActiveTooltipIndex);\n  var {\n    children\n  } = node;\n  var childDepth = depth + 1;\n  var computedChildren = children && children.length ? children.map((child, i) => computeNode({\n    depth: childDepth,\n    node: child,\n    index: i,\n    dataKey,\n    nameKey,\n    nestedActiveTooltipIndex: currentTooltipIndex\n  })) : null;\n  var nodeValue;\n  if (computedChildren && computedChildren.length) {\n    nodeValue = computedChildren.reduce((result, child) => result + child[NODE_VALUE_KEY], 0);\n  } else {\n    // TODO need to verify dataKey\n    nodeValue = isNan(node[dataKey]) || node[dataKey] <= 0 ? 0 : node[dataKey];\n  }\n  return _objectSpread(_objectSpread({}, node), {}, {\n    children: computedChildren,\n    // @ts-expect-error getValueByDataKey does not validate the output type\n    name: getValueByDataKey(node, nameKey, ''),\n    [NODE_VALUE_KEY]: nodeValue,\n    depth,\n    index,\n    tooltipIndex: currentTooltipIndex\n  });\n};\nvar filterRect = node => ({\n  x: node.x,\n  y: node.y,\n  width: node.width,\n  height: node.height\n});\n// Compute the area for each child based on value & scale.\nvar getAreaOfChildren = (children, areaValueRatio) => {\n  var ratio = areaValueRatio < 0 ? 0 : areaValueRatio;\n  return children.map(child => {\n    var area = child[NODE_VALUE_KEY] * ratio;\n    return _objectSpread(_objectSpread({}, child), {}, {\n      area: isNan(area) || area <= 0 ? 0 : area\n    });\n  });\n};\n\n// Computes the score for the specified row, as the worst aspect ratio.\nvar getWorstScore = (row, parentSize, aspectRatio) => {\n  var parentArea = parentSize * parentSize;\n  var rowArea = row.area * row.area;\n  var {\n    min,\n    max\n  } = row.reduce((result, child) => ({\n    min: Math.min(result.min, child.area),\n    max: Math.max(result.max, child.area)\n  }), {\n    min: Infinity,\n    max: 0\n  });\n  return rowArea ? Math.max(parentArea * max * aspectRatio / rowArea, rowArea / (parentArea * min * aspectRatio)) : Infinity;\n};\nvar horizontalPosition = (row, parentSize, parentRect, isFlush) => {\n  var rowHeight = parentSize ? Math.round(row.area / parentSize) : 0;\n  if (isFlush || rowHeight > parentRect.height) {\n    rowHeight = parentRect.height;\n  }\n  var curX = parentRect.x;\n  var child;\n  for (var i = 0, len = row.length; i < len; i++) {\n    child = row[i];\n    child.x = curX;\n    child.y = parentRect.y;\n    child.height = rowHeight;\n    child.width = Math.min(rowHeight ? Math.round(child.area / rowHeight) : 0, parentRect.x + parentRect.width - curX);\n    curX += child.width;\n  }\n  // add the remain x to the last one of row\n  if (child != null) {\n    child.width += parentRect.x + parentRect.width - curX;\n  }\n  return _objectSpread(_objectSpread({}, parentRect), {}, {\n    y: parentRect.y + rowHeight,\n    height: parentRect.height - rowHeight\n  });\n};\nvar verticalPosition = (row, parentSize, parentRect, isFlush) => {\n  var rowWidth = parentSize ? Math.round(row.area / parentSize) : 0;\n  if (isFlush || rowWidth > parentRect.width) {\n    rowWidth = parentRect.width;\n  }\n  var curY = parentRect.y;\n  var child;\n  for (var i = 0, len = row.length; i < len; i++) {\n    child = row[i];\n    child.x = parentRect.x;\n    child.y = curY;\n    child.width = rowWidth;\n    child.height = Math.min(rowWidth ? Math.round(child.area / rowWidth) : 0, parentRect.y + parentRect.height - curY);\n    curY += child.height;\n  }\n  if (child) {\n    child.height += parentRect.y + parentRect.height - curY;\n  }\n  return _objectSpread(_objectSpread({}, parentRect), {}, {\n    x: parentRect.x + rowWidth,\n    width: parentRect.width - rowWidth\n  });\n};\nvar position = (row, parentSize, parentRect, isFlush) => {\n  if (parentSize === parentRect.width) {\n    return horizontalPosition(row, parentSize, parentRect, isFlush);\n  }\n  return verticalPosition(row, parentSize, parentRect, isFlush);\n};\n// Recursively arranges the specified node's children into squarified rows.\nvar squarify = (node, aspectRatio) => {\n  var {\n    children\n  } = node;\n  if (children && children.length) {\n    var rect = filterRect(node);\n    // @ts-expect-error we can't create an array with static property on a single line so typescript will complain.\n    var row = [];\n    var best = Infinity; // the best row score so far\n    var child, score; // the current row score\n    var size = Math.min(rect.width, rect.height); // initial orientation\n    var scaleChildren = getAreaOfChildren(children, rect.width * rect.height / node[NODE_VALUE_KEY]);\n    var tempChildren = scaleChildren.slice();\n\n    // why are we setting static properties on an array?\n    row.area = 0;\n    while (tempChildren.length > 0) {\n      // row first\n      // eslint-disable-next-line prefer-destructuring\n      row.push(child = tempChildren[0]);\n      row.area += child.area;\n      score = getWorstScore(row, size, aspectRatio);\n      if (score <= best) {\n        // continue with this orientation\n        tempChildren.shift();\n        best = score;\n      } else {\n        var _row$pop$area, _row$pop;\n        // abort, and try a different orientation\n        row.area -= (_row$pop$area = (_row$pop = row.pop()) === null || _row$pop === void 0 ? void 0 : _row$pop.area) !== null && _row$pop$area !== void 0 ? _row$pop$area : 0;\n        rect = position(row, size, rect, false);\n        size = Math.min(rect.width, rect.height);\n        row.length = row.area = 0;\n        best = Infinity;\n      }\n    }\n    if (row.length) {\n      rect = position(row, size, rect, true);\n      row.length = row.area = 0;\n    }\n    return _objectSpread(_objectSpread({}, node), {}, {\n      children: scaleChildren.map(c => squarify(c, aspectRatio))\n    });\n  }\n  return node;\n};\nvar defaultTreeMapProps = {\n  aspectRatio: 0.5 * (1 + Math.sqrt(5)),\n  dataKey: 'value',\n  nameKey: 'name',\n  type: 'flat',\n  isAnimationActive: !Global.isSsr,\n  isUpdateAnimationActive: !Global.isSsr,\n  animationBegin: 0,\n  animationDuration: 1500,\n  animationEasing: 'linear'\n};\nvar defaultState = {\n  isAnimationFinished: false,\n  formatRoot: null,\n  currentRoot: null,\n  nestIndex: [],\n  prevAspectRatio: defaultTreeMapProps.aspectRatio,\n  prevDataKey: defaultTreeMapProps.dataKey\n};\nfunction ContentItem(_ref2) {\n  var {\n    content,\n    nodeProps,\n    type,\n    colorPanel,\n    onMouseEnter,\n    onMouseLeave,\n    onClick\n  } = _ref2;\n  if (/*#__PURE__*/React.isValidElement(content)) {\n    return /*#__PURE__*/React.createElement(Layer, {\n      onMouseEnter: onMouseEnter,\n      onMouseLeave: onMouseLeave,\n      onClick: onClick\n    }, /*#__PURE__*/React.cloneElement(content, nodeProps));\n  }\n  if (typeof content === 'function') {\n    return /*#__PURE__*/React.createElement(Layer, {\n      onMouseEnter: onMouseEnter,\n      onMouseLeave: onMouseLeave,\n      onClick: onClick\n    }, content(nodeProps));\n  }\n  // optimize default shape\n  var {\n    x,\n    y,\n    width,\n    height,\n    index\n  } = nodeProps;\n  var arrow = null;\n  if (width > 10 && height > 10 && nodeProps.children && type === 'nest') {\n    arrow = /*#__PURE__*/React.createElement(Polygon, {\n      points: [{\n        x: x + 2,\n        y: y + height / 2\n      }, {\n        x: x + 6,\n        y: y + height / 2 + 3\n      }, {\n        x: x + 2,\n        y: y + height / 2 + 6\n      }]\n    });\n  }\n  var text = null;\n  var nameSize = getStringSize(nodeProps.name);\n  if (width > 20 && height > 20 && nameSize.width < width && nameSize.height < height) {\n    text = /*#__PURE__*/React.createElement(\"text\", {\n      x: x + 8,\n      y: y + height / 2 + 7,\n      fontSize: 14\n    }, nodeProps.name);\n  }\n  var colors = colorPanel || COLOR_PANEL;\n  return /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(Rectangle, _extends({\n    fill: nodeProps.depth < 2 ? colors[index % colors.length] : 'rgba(255,255,255,0)',\n    stroke: \"#fff\"\n  }, omit(nodeProps, ['children']), {\n    onMouseEnter: onMouseEnter,\n    onMouseLeave: onMouseLeave,\n    onClick: onClick,\n    \"data-recharts-item-index\": nodeProps.tooltipIndex\n  })), arrow, text);\n}\nfunction ContentItemWithEvents(props) {\n  var dispatch = useAppDispatch();\n  var activeCoordinate = {\n    x: props.nodeProps.x + props.nodeProps.width / 2,\n    y: props.nodeProps.y + props.nodeProps.height / 2\n  };\n  var onMouseEnter = () => {\n    dispatch(setActiveMouseOverItemIndex({\n      activeIndex: props.nodeProps.tooltipIndex,\n      activeDataKey: props.dataKey,\n      activeCoordinate\n    }));\n  };\n  var onMouseLeave = () => {\n    // clearing state on mouseLeaveItem causes re-rendering issues\n    // we don't actually want to do this for TreeMap - we clear state when we leave the entire chart instead\n  };\n  var onClick = () => {\n    dispatch(setActiveClickItemIndex({\n      activeIndex: props.nodeProps.tooltipIndex,\n      activeDataKey: props.dataKey,\n      activeCoordinate\n    }));\n  };\n  return /*#__PURE__*/React.createElement(ContentItem, _extends({}, props, {\n    onMouseEnter: onMouseEnter,\n    onMouseLeave: onMouseLeave,\n    onClick: onClick\n  }));\n}\nfunction getTooltipEntrySettings(_ref3) {\n  var {\n    props,\n    currentRoot\n  } = _ref3;\n  var {\n    dataKey,\n    nameKey,\n    stroke,\n    fill\n  } = props;\n  return {\n    dataDefinedOnItem: currentRoot,\n    positions: undefined,\n    // TODO I think Treemap has the capability of computing positions and supporting defaultIndex? Except it doesn't yet\n    settings: {\n      stroke,\n      strokeWidth: undefined,\n      fill,\n      dataKey,\n      nameKey,\n      name: undefined,\n      // Each TreemapNode has its own name\n      hide: false,\n      type: undefined,\n      color: fill,\n      unit: ''\n    }\n  };\n}\n\n// Why is margin not a treemap prop? No clue. Probably it should be\nvar defaultTreemapMargin = {\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0\n};\nfunction TreemapItem(_ref4) {\n  var {\n    content,\n    nodeProps,\n    isLeaf,\n    treemapProps,\n    onNestClick\n  } = _ref4;\n  var {\n    isAnimationActive,\n    animationBegin,\n    animationDuration,\n    animationEasing,\n    isUpdateAnimationActive,\n    type,\n    colorPanel,\n    dataKey,\n    onAnimationStart,\n    onAnimationEnd,\n    onMouseEnter: onMouseEnterFromProps,\n    onClick: onItemClickFromProps,\n    onMouseLeave: onMouseLeaveFromProps\n  } = treemapProps;\n  var {\n    width,\n    height,\n    x,\n    y\n  } = nodeProps;\n  var translateX = -x - width;\n  var translateY = 0;\n  var onMouseEnter = e => {\n    if ((isLeaf || type === 'nest') && typeof onMouseEnterFromProps === 'function') {\n      onMouseEnterFromProps(nodeProps, e);\n    }\n  };\n  var onMouseLeave = e => {\n    if ((isLeaf || type === 'nest') && typeof onMouseLeaveFromProps === 'function') {\n      onMouseLeaveFromProps(nodeProps, e);\n    }\n  };\n  var onClick = () => {\n    if (type === 'nest') {\n      onNestClick(nodeProps);\n    }\n    if ((isLeaf || type === 'nest') && typeof onItemClickFromProps === 'function') {\n      onItemClickFromProps(nodeProps);\n    }\n  };\n  var handleAnimationEnd = useCallback(() => {\n    if (typeof onAnimationEnd === 'function') {\n      onAnimationEnd();\n    }\n  }, [onAnimationEnd]);\n  var handleAnimationStart = useCallback(() => {\n    if (typeof onAnimationStart === 'function') {\n      onAnimationStart();\n    }\n  }, [onAnimationStart]);\n  return /*#__PURE__*/React.createElement(CSSTransitionAnimate, {\n    animationId: \"treemap-\".concat(nodeProps.tooltipIndex),\n    from: \"translate(\".concat(translateX, \"px, \").concat(translateY, \"px)\"),\n    to: \"translate(0, 0)\",\n    attributeName: \"transform\",\n    begin: animationBegin,\n    easing: animationEasing,\n    isActive: isAnimationActive,\n    duration: animationDuration,\n    onAnimationStart: handleAnimationStart,\n    onAnimationEnd: handleAnimationEnd\n  }, style => /*#__PURE__*/React.createElement(Layer, {\n    onMouseEnter: onMouseEnter,\n    onMouseLeave: onMouseLeave,\n    onClick: onClick,\n    style: _objectSpread(_objectSpread({}, style), {}, {\n      transformOrigin: \"\".concat(x, \" \").concat(y)\n    })\n  }, /*#__PURE__*/React.createElement(ContentItemWithEvents, {\n    content: content,\n    dataKey: dataKey,\n    nodeProps: _objectSpread(_objectSpread({}, nodeProps), {}, {\n      isAnimationActive,\n      isUpdateAnimationActive: !isUpdateAnimationActive,\n      width,\n      height,\n      x,\n      y\n    }),\n    type: type,\n    colorPanel: colorPanel\n  })));\n}\nclass TreemapWithState extends PureComponent {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"state\", _objectSpread({}, defaultState));\n    _defineProperty(this, \"handleClick\", node => {\n      var {\n        onClick,\n        type\n      } = this.props;\n      if (type === 'nest' && node.children) {\n        var {\n          width,\n          height,\n          dataKey,\n          nameKey,\n          aspectRatio\n        } = this.props;\n        var root = computeNode({\n          depth: 0,\n          node: _objectSpread(_objectSpread({}, node), {}, {\n            x: 0,\n            y: 0,\n            width,\n            height\n          }),\n          index: 0,\n          dataKey,\n          nameKey,\n          // with Treemap nesting, should this continue nesting the index or start from empty string?\n          nestedActiveTooltipIndex: node.tooltipIndex\n        });\n        var formatRoot = squarify(root, aspectRatio);\n        var {\n          nestIndex\n        } = this.state;\n        nestIndex.push(node);\n        this.setState({\n          formatRoot,\n          currentRoot: root,\n          nestIndex\n        });\n      }\n      if (onClick) {\n        onClick(node);\n      }\n    });\n    _defineProperty(this, \"handleTouchMove\", e => {\n      var touchEvent = e.touches[0];\n      var target = document.elementFromPoint(touchEvent.clientX, touchEvent.clientY);\n      if (!target || !target.getAttribute || this.state.formatRoot == null) {\n        return;\n      }\n      var itemIndex = target.getAttribute('data-recharts-item-index');\n      var activeNode = treemapPayloadSearcher(this.state.formatRoot, itemIndex);\n      if (!activeNode) {\n        return;\n      }\n      var {\n        dataKey,\n        dispatch\n      } = this.props;\n      var activeCoordinate = {\n        x: activeNode.x + activeNode.width / 2,\n        y: activeNode.y + activeNode.height / 2\n      };\n\n      // Treemap does not support onTouchMove prop, but it could\n      // onTouchMove?.(activeNode, Number(itemIndex), e);\n      dispatch(setActiveMouseOverItemIndex({\n        activeIndex: itemIndex,\n        activeDataKey: dataKey,\n        activeCoordinate\n      }));\n    });\n  }\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.data !== prevState.prevData || nextProps.type !== prevState.prevType || nextProps.width !== prevState.prevWidth || nextProps.height !== prevState.prevHeight || nextProps.dataKey !== prevState.prevDataKey || nextProps.aspectRatio !== prevState.prevAspectRatio) {\n      var root = computeNode({\n        depth: 0,\n        // @ts-expect-error missing properties\n        node: {\n          children: nextProps.data,\n          x: 0,\n          y: 0,\n          width: nextProps.width,\n          height: nextProps.height\n        },\n        index: 0,\n        dataKey: nextProps.dataKey,\n        nameKey: nextProps.nameKey\n      });\n      var formatRoot = squarify(root, nextProps.aspectRatio);\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        formatRoot,\n        currentRoot: root,\n        nestIndex: [root],\n        prevAspectRatio: nextProps.aspectRatio,\n        prevData: nextProps.data,\n        prevWidth: nextProps.width,\n        prevHeight: nextProps.height,\n        prevDataKey: nextProps.dataKey,\n        prevType: nextProps.type\n      });\n    }\n    return null;\n  }\n  handleNestIndex(node, i) {\n    var {\n      nestIndex\n    } = this.state;\n    var {\n      width,\n      height,\n      dataKey,\n      nameKey,\n      aspectRatio\n    } = this.props;\n    var root = computeNode({\n      depth: 0,\n      node: _objectSpread(_objectSpread({}, node), {}, {\n        x: 0,\n        y: 0,\n        width,\n        height\n      }),\n      index: 0,\n      dataKey,\n      nameKey,\n      // with Treemap nesting, should this continue nesting the index or start from empty string?\n      nestedActiveTooltipIndex: node.tooltipIndex\n    });\n    var formatRoot = squarify(root, aspectRatio);\n    nestIndex = nestIndex.slice(0, i + 1);\n    this.setState({\n      formatRoot,\n      currentRoot: node,\n      nestIndex\n    });\n  }\n  renderNode(root, node) {\n    var {\n      content,\n      type\n    } = this.props;\n    var nodeProps = _objectSpread(_objectSpread(_objectSpread({}, svgPropertiesNoEvents(this.props)), node), {}, {\n      root\n    });\n    var isLeaf = !node.children || !node.children.length;\n    var {\n      currentRoot\n    } = this.state;\n    var isCurrentRootChild = ((currentRoot === null || currentRoot === void 0 ? void 0 : currentRoot.children) || []).filter(item => item.depth === node.depth && item.name === node.name);\n    if (!isCurrentRootChild.length && root.depth && type === 'nest') {\n      return null;\n    }\n    return /*#__PURE__*/React.createElement(Layer, {\n      key: \"recharts-treemap-node-\".concat(nodeProps.x, \"-\").concat(nodeProps.y, \"-\").concat(nodeProps.name),\n      className: \"recharts-treemap-depth-\".concat(node.depth)\n    }, /*#__PURE__*/React.createElement(TreemapItem, {\n      isLeaf: isLeaf,\n      content: content,\n      nodeProps: nodeProps,\n      treemapProps: this.props,\n      onNestClick: this.handleClick\n    }), node.children && node.children.length ? node.children.map(child => this.renderNode(node, child)) : null);\n  }\n  renderAllNodes() {\n    var {\n      formatRoot\n    } = this.state;\n    if (!formatRoot) {\n      return null;\n    }\n    return this.renderNode(formatRoot, formatRoot);\n  }\n\n  // render nest treemap\n  renderNestIndex() {\n    var {\n      nameKey,\n      nestIndexContent\n    } = this.props;\n    var {\n      nestIndex\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"recharts-treemap-nest-index-wrapper\",\n      style: {\n        marginTop: '8px',\n        textAlign: 'center'\n      }\n    }, nestIndex.map((item, i) => {\n      // TODO need to verify nameKey type\n      var name = get(item, nameKey, 'root');\n      var content;\n      if (/*#__PURE__*/React.isValidElement(nestIndexContent)) {\n        // the cloned content is ignored at all times - let's remove it?\n        content = /*#__PURE__*/React.cloneElement(nestIndexContent, item, i);\n      }\n      if (typeof nestIndexContent === 'function') {\n        content = nestIndexContent(item, i);\n      } else {\n        content = name;\n      }\n      return (/*#__PURE__*/\n        // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions\n        React.createElement(\"div\", {\n          onClick: this.handleNestIndex.bind(this, item, i),\n          key: \"nest-index-\".concat(uniqueId()),\n          className: \"recharts-treemap-nest-index-box\",\n          style: {\n            cursor: 'pointer',\n            display: 'inline-block',\n            padding: '0 7px',\n            background: '#000',\n            color: '#fff',\n            marginRight: '3px'\n          }\n        }, content)\n      );\n    }));\n  }\n  render() {\n    var _this$props = this.props,\n      {\n        width,\n        height,\n        className,\n        style,\n        children,\n        type\n      } = _this$props,\n      others = _objectWithoutProperties(_this$props, _excluded);\n    var attrs = svgPropertiesNoEvents(others);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SetTooltipEntrySettings, {\n      fn: getTooltipEntrySettings,\n      args: {\n        props: this.props,\n        currentRoot: this.state.currentRoot\n      }\n    }), /*#__PURE__*/React.createElement(Surface, _extends({}, attrs, {\n      width: width,\n      height: type === 'nest' ? height - 30 : height,\n      onTouchMove: this.handleTouchMove\n    }), this.renderAllNodes(), children), type === 'nest' && this.renderNestIndex());\n  }\n}\n_defineProperty(TreemapWithState, \"displayName\", 'Treemap');\nfunction TreemapDispatchInject(props) {\n  var dispatch = useAppDispatch();\n  var width = useChartWidth();\n  var height = useChartHeight();\n  if (!isPositiveNumber(width) || !isPositiveNumber(height)) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(TreemapWithState, _extends({}, props, {\n    width: width,\n    height: height,\n    dispatch: dispatch\n  }));\n}\nexport function Treemap(outsideProps) {\n  var _props$className;\n  var props = resolveDefaultProps(outsideProps, defaultTreeMapProps);\n  var {\n    className,\n    style,\n    width,\n    height\n  } = props;\n  var [tooltipPortal, setTooltipPortal] = useState(null);\n  return /*#__PURE__*/React.createElement(RechartsStoreProvider, {\n    preloadedState: {\n      options\n    },\n    reduxStoreName: (_props$className = props.className) !== null && _props$className !== void 0 ? _props$className : 'Treemap'\n  }, /*#__PURE__*/React.createElement(ReportChartMargin, {\n    margin: defaultTreemapMargin\n  }), /*#__PURE__*/React.createElement(RechartsWrapper, {\n    dispatchTouchEvents: false,\n    className: className,\n    style: style,\n    width: width,\n    height: height\n    /*\n     * Treemap has a bug where it doesn't include strokeWidth in its dimension calculation\n     * which makes the actual chart exactly {strokeWidth} larger than asked for.\n     * It's not a huge deal usually, but it makes the responsive option cycle infinitely.\n     */,\n    responsive: false,\n    ref: node => {\n      if (tooltipPortal == null && node != null) {\n        setTooltipPortal(node);\n      }\n    },\n    onMouseEnter: undefined,\n    onMouseLeave: undefined,\n    onClick: undefined,\n    onMouseMove: undefined,\n    onMouseDown: undefined,\n    onMouseUp: undefined,\n    onContextMenu: undefined,\n    onDoubleClick: undefined,\n    onTouchStart: undefined,\n    onTouchMove: undefined,\n    onTouchEnd: undefined\n  }, /*#__PURE__*/React.createElement(TooltipPortalContext.Provider, {\n    value: tooltipPortal\n  }, /*#__PURE__*/React.createElement(TreemapDispatchInject, props))));\n}","map":{"version":3,"names":["_excluded","_objectWithoutProperties","e","t","o","r","i","_objectWithoutPropertiesLoose","Object","getOwnPropertySymbols","n","length","indexOf","propertyIsEnumerable","call","hasOwnProperty","_extends","assign","bind","arguments","apply","ownKeys","keys","filter","getOwnPropertyDescriptor","enumerable","push","_objectSpread","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","value","configurable","writable","_toPrimitive","Symbol","toPrimitive","TypeError","String","Number","React","PureComponent","useCallback","useState","omit","get","Layer","Surface","Polygon","Rectangle","getValueByDataKey","COLOR_PANEL","isNan","uniqueId","getStringSize","Global","ReportChartMargin","useChartHeight","useChartWidth","TooltipPortalContext","RechartsWrapper","setActiveClickItemIndex","setActiveMouseOverItemIndex","SetTooltipEntrySettings","RechartsStoreProvider","useAppDispatch","isPositiveNumber","svgPropertiesNoEvents","CSSTransitionAnimate","resolveDefaultProps","NODE_VALUE_KEY","treemapPayloadSearcher","data","activeIndex","undefined","addToTreemapNodeIndex","indexInChildrenArr","activeTooltipIndexSoFar","concat","options","chartName","defaultTooltipEventType","validateTooltipEventTypes","tooltipPayloadSearcher","eventEmitter","computeNode","_ref","depth","node","index","dataKey","nameKey","nestedActiveTooltipIndex","currentTooltipIndex","children","childDepth","computedChildren","map","child","nodeValue","reduce","result","name","tooltipIndex","filterRect","x","y","width","height","getAreaOfChildren","areaValueRatio","ratio","area","getWorstScore","row","parentSize","aspectRatio","parentArea","rowArea","min","max","Math","Infinity","horizontalPosition","parentRect","isFlush","rowHeight","round","curX","len","verticalPosition","rowWidth","curY","position","squarify","rect","best","score","size","scaleChildren","tempChildren","slice","shift","_row$pop$area","_row$pop","pop","c","defaultTreeMapProps","sqrt","type","isAnimationActive","isSsr","isUpdateAnimationActive","animationBegin","animationDuration","animationEasing","defaultState","isAnimationFinished","formatRoot","currentRoot","nestIndex","prevAspectRatio","prevDataKey","ContentItem","_ref2","content","nodeProps","colorPanel","onMouseEnter","onMouseLeave","onClick","isValidElement","createElement","cloneElement","arrow","points","text","nameSize","fontSize","colors","fill","stroke","ContentItemWithEvents","props","dispatch","activeCoordinate","activeDataKey","getTooltipEntrySettings","_ref3","dataDefinedOnItem","positions","settings","strokeWidth","hide","color","unit","defaultTreemapMargin","top","right","bottom","left","TreemapItem","_ref4","isLeaf","treemapProps","onNestClick","onAnimationStart","onAnimationEnd","onMouseEnterFromProps","onItemClickFromProps","onMouseLeaveFromProps","translateX","translateY","handleAnimationEnd","handleAnimationStart","animationId","from","to","attributeName","begin","easing","isActive","duration","style","transformOrigin","TreemapWithState","constructor","root","state","setState","touchEvent","touches","target","document","elementFromPoint","clientX","clientY","getAttribute","itemIndex","activeNode","getDerivedStateFromProps","nextProps","prevState","prevData","prevType","prevWidth","prevHeight","handleNestIndex","renderNode","isCurrentRootChild","item","key","className","handleClick","renderAllNodes","renderNestIndex","nestIndexContent","marginTop","textAlign","cursor","display","padding","background","marginRight","render","_this$props","others","attrs","Fragment","fn","args","onTouchMove","handleTouchMove","TreemapDispatchInject","Treemap","outsideProps","_props$className","tooltipPortal","setTooltipPortal","preloadedState","reduxStoreName","margin","dispatchTouchEvents","responsive","ref","onMouseMove","onMouseDown","onMouseUp","onContextMenu","onDoubleClick","onTouchStart","onTouchEnd","Provider"],"sources":["D:/CN/MERN Project/InnerSpace/frontend/node_modules/recharts/es6/chart/Treemap.js"],"sourcesContent":["var _excluded = [\"width\", \"height\", \"className\", \"style\", \"children\", \"type\"];\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nimport * as React from 'react';\nimport { PureComponent, useCallback, useState } from 'react';\nimport omit from 'es-toolkit/compat/omit';\nimport get from 'es-toolkit/compat/get';\nimport { Layer } from '../container/Layer';\nimport { Surface } from '../container/Surface';\nimport { Polygon } from '../shape/Polygon';\nimport { Rectangle } from '../shape/Rectangle';\nimport { getValueByDataKey } from '../util/ChartUtils';\nimport { COLOR_PANEL } from '../util/Constants';\nimport { isNan, uniqueId } from '../util/DataUtils';\nimport { getStringSize } from '../util/DOMUtils';\nimport { Global } from '../util/Global';\nimport { ReportChartMargin, useChartHeight, useChartWidth } from '../context/chartLayoutContext';\nimport { TooltipPortalContext } from '../context/tooltipPortalContext';\nimport { RechartsWrapper } from './RechartsWrapper';\nimport { setActiveClickItemIndex, setActiveMouseOverItemIndex } from '../state/tooltipSlice';\nimport { SetTooltipEntrySettings } from '../state/SetTooltipEntrySettings';\nimport { RechartsStoreProvider } from '../state/RechartsStoreProvider';\nimport { useAppDispatch } from '../state/hooks';\nimport { isPositiveNumber } from '../util/isWellBehavedNumber';\nimport { svgPropertiesNoEvents } from '../util/svgPropertiesNoEvents';\nimport { CSSTransitionAnimate } from '../animation/CSSTransitionAnimate';\nimport { resolveDefaultProps } from '../util/resolveDefaultProps';\nvar NODE_VALUE_KEY = 'value';\n\n/**\n * This is what end users defines as `data` on Treemap.\n */\n\n/**\n * This is what is returned from `squarify`, the final treemap data structure\n * that gets rendered and is stored in\n */\n\nexport var treemapPayloadSearcher = (data, activeIndex) => {\n  if (!data || !activeIndex) {\n    return undefined;\n  }\n  return get(data, activeIndex);\n};\nexport var addToTreemapNodeIndex = function addToTreemapNodeIndex(indexInChildrenArr) {\n  var activeTooltipIndexSoFar = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  return \"\".concat(activeTooltipIndexSoFar, \"children[\").concat(indexInChildrenArr, \"]\");\n};\nvar options = {\n  chartName: 'Treemap',\n  defaultTooltipEventType: 'item',\n  validateTooltipEventTypes: ['item'],\n  tooltipPayloadSearcher: treemapPayloadSearcher,\n  eventEmitter: undefined\n};\nexport var computeNode = _ref => {\n  var {\n    depth,\n    node,\n    index,\n    dataKey,\n    nameKey,\n    nestedActiveTooltipIndex\n  } = _ref;\n  var currentTooltipIndex = depth === 0 ? '' : addToTreemapNodeIndex(index, nestedActiveTooltipIndex);\n  var {\n    children\n  } = node;\n  var childDepth = depth + 1;\n  var computedChildren = children && children.length ? children.map((child, i) => computeNode({\n    depth: childDepth,\n    node: child,\n    index: i,\n    dataKey,\n    nameKey,\n    nestedActiveTooltipIndex: currentTooltipIndex\n  })) : null;\n  var nodeValue;\n  if (computedChildren && computedChildren.length) {\n    nodeValue = computedChildren.reduce((result, child) => result + child[NODE_VALUE_KEY], 0);\n  } else {\n    // TODO need to verify dataKey\n    nodeValue = isNan(node[dataKey]) || node[dataKey] <= 0 ? 0 : node[dataKey];\n  }\n  return _objectSpread(_objectSpread({}, node), {}, {\n    children: computedChildren,\n    // @ts-expect-error getValueByDataKey does not validate the output type\n    name: getValueByDataKey(node, nameKey, ''),\n    [NODE_VALUE_KEY]: nodeValue,\n    depth,\n    index,\n    tooltipIndex: currentTooltipIndex\n  });\n};\nvar filterRect = node => ({\n  x: node.x,\n  y: node.y,\n  width: node.width,\n  height: node.height\n});\n// Compute the area for each child based on value & scale.\nvar getAreaOfChildren = (children, areaValueRatio) => {\n  var ratio = areaValueRatio < 0 ? 0 : areaValueRatio;\n  return children.map(child => {\n    var area = child[NODE_VALUE_KEY] * ratio;\n    return _objectSpread(_objectSpread({}, child), {}, {\n      area: isNan(area) || area <= 0 ? 0 : area\n    });\n  });\n};\n\n// Computes the score for the specified row, as the worst aspect ratio.\nvar getWorstScore = (row, parentSize, aspectRatio) => {\n  var parentArea = parentSize * parentSize;\n  var rowArea = row.area * row.area;\n  var {\n    min,\n    max\n  } = row.reduce((result, child) => ({\n    min: Math.min(result.min, child.area),\n    max: Math.max(result.max, child.area)\n  }), {\n    min: Infinity,\n    max: 0\n  });\n  return rowArea ? Math.max(parentArea * max * aspectRatio / rowArea, rowArea / (parentArea * min * aspectRatio)) : Infinity;\n};\nvar horizontalPosition = (row, parentSize, parentRect, isFlush) => {\n  var rowHeight = parentSize ? Math.round(row.area / parentSize) : 0;\n  if (isFlush || rowHeight > parentRect.height) {\n    rowHeight = parentRect.height;\n  }\n  var curX = parentRect.x;\n  var child;\n  for (var i = 0, len = row.length; i < len; i++) {\n    child = row[i];\n    child.x = curX;\n    child.y = parentRect.y;\n    child.height = rowHeight;\n    child.width = Math.min(rowHeight ? Math.round(child.area / rowHeight) : 0, parentRect.x + parentRect.width - curX);\n    curX += child.width;\n  }\n  // add the remain x to the last one of row\n  if (child != null) {\n    child.width += parentRect.x + parentRect.width - curX;\n  }\n  return _objectSpread(_objectSpread({}, parentRect), {}, {\n    y: parentRect.y + rowHeight,\n    height: parentRect.height - rowHeight\n  });\n};\nvar verticalPosition = (row, parentSize, parentRect, isFlush) => {\n  var rowWidth = parentSize ? Math.round(row.area / parentSize) : 0;\n  if (isFlush || rowWidth > parentRect.width) {\n    rowWidth = parentRect.width;\n  }\n  var curY = parentRect.y;\n  var child;\n  for (var i = 0, len = row.length; i < len; i++) {\n    child = row[i];\n    child.x = parentRect.x;\n    child.y = curY;\n    child.width = rowWidth;\n    child.height = Math.min(rowWidth ? Math.round(child.area / rowWidth) : 0, parentRect.y + parentRect.height - curY);\n    curY += child.height;\n  }\n  if (child) {\n    child.height += parentRect.y + parentRect.height - curY;\n  }\n  return _objectSpread(_objectSpread({}, parentRect), {}, {\n    x: parentRect.x + rowWidth,\n    width: parentRect.width - rowWidth\n  });\n};\nvar position = (row, parentSize, parentRect, isFlush) => {\n  if (parentSize === parentRect.width) {\n    return horizontalPosition(row, parentSize, parentRect, isFlush);\n  }\n  return verticalPosition(row, parentSize, parentRect, isFlush);\n};\n// Recursively arranges the specified node's children into squarified rows.\nvar squarify = (node, aspectRatio) => {\n  var {\n    children\n  } = node;\n  if (children && children.length) {\n    var rect = filterRect(node);\n    // @ts-expect-error we can't create an array with static property on a single line so typescript will complain.\n    var row = [];\n    var best = Infinity; // the best row score so far\n    var child, score; // the current row score\n    var size = Math.min(rect.width, rect.height); // initial orientation\n    var scaleChildren = getAreaOfChildren(children, rect.width * rect.height / node[NODE_VALUE_KEY]);\n    var tempChildren = scaleChildren.slice();\n\n    // why are we setting static properties on an array?\n    row.area = 0;\n    while (tempChildren.length > 0) {\n      // row first\n      // eslint-disable-next-line prefer-destructuring\n      row.push(child = tempChildren[0]);\n      row.area += child.area;\n      score = getWorstScore(row, size, aspectRatio);\n      if (score <= best) {\n        // continue with this orientation\n        tempChildren.shift();\n        best = score;\n      } else {\n        var _row$pop$area, _row$pop;\n        // abort, and try a different orientation\n        row.area -= (_row$pop$area = (_row$pop = row.pop()) === null || _row$pop === void 0 ? void 0 : _row$pop.area) !== null && _row$pop$area !== void 0 ? _row$pop$area : 0;\n        rect = position(row, size, rect, false);\n        size = Math.min(rect.width, rect.height);\n        row.length = row.area = 0;\n        best = Infinity;\n      }\n    }\n    if (row.length) {\n      rect = position(row, size, rect, true);\n      row.length = row.area = 0;\n    }\n    return _objectSpread(_objectSpread({}, node), {}, {\n      children: scaleChildren.map(c => squarify(c, aspectRatio))\n    });\n  }\n  return node;\n};\nvar defaultTreeMapProps = {\n  aspectRatio: 0.5 * (1 + Math.sqrt(5)),\n  dataKey: 'value',\n  nameKey: 'name',\n  type: 'flat',\n  isAnimationActive: !Global.isSsr,\n  isUpdateAnimationActive: !Global.isSsr,\n  animationBegin: 0,\n  animationDuration: 1500,\n  animationEasing: 'linear'\n};\nvar defaultState = {\n  isAnimationFinished: false,\n  formatRoot: null,\n  currentRoot: null,\n  nestIndex: [],\n  prevAspectRatio: defaultTreeMapProps.aspectRatio,\n  prevDataKey: defaultTreeMapProps.dataKey\n};\nfunction ContentItem(_ref2) {\n  var {\n    content,\n    nodeProps,\n    type,\n    colorPanel,\n    onMouseEnter,\n    onMouseLeave,\n    onClick\n  } = _ref2;\n  if (/*#__PURE__*/React.isValidElement(content)) {\n    return /*#__PURE__*/React.createElement(Layer, {\n      onMouseEnter: onMouseEnter,\n      onMouseLeave: onMouseLeave,\n      onClick: onClick\n    }, /*#__PURE__*/React.cloneElement(content, nodeProps));\n  }\n  if (typeof content === 'function') {\n    return /*#__PURE__*/React.createElement(Layer, {\n      onMouseEnter: onMouseEnter,\n      onMouseLeave: onMouseLeave,\n      onClick: onClick\n    }, content(nodeProps));\n  }\n  // optimize default shape\n  var {\n    x,\n    y,\n    width,\n    height,\n    index\n  } = nodeProps;\n  var arrow = null;\n  if (width > 10 && height > 10 && nodeProps.children && type === 'nest') {\n    arrow = /*#__PURE__*/React.createElement(Polygon, {\n      points: [{\n        x: x + 2,\n        y: y + height / 2\n      }, {\n        x: x + 6,\n        y: y + height / 2 + 3\n      }, {\n        x: x + 2,\n        y: y + height / 2 + 6\n      }]\n    });\n  }\n  var text = null;\n  var nameSize = getStringSize(nodeProps.name);\n  if (width > 20 && height > 20 && nameSize.width < width && nameSize.height < height) {\n    text = /*#__PURE__*/React.createElement(\"text\", {\n      x: x + 8,\n      y: y + height / 2 + 7,\n      fontSize: 14\n    }, nodeProps.name);\n  }\n  var colors = colorPanel || COLOR_PANEL;\n  return /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(Rectangle, _extends({\n    fill: nodeProps.depth < 2 ? colors[index % colors.length] : 'rgba(255,255,255,0)',\n    stroke: \"#fff\"\n  }, omit(nodeProps, ['children']), {\n    onMouseEnter: onMouseEnter,\n    onMouseLeave: onMouseLeave,\n    onClick: onClick,\n    \"data-recharts-item-index\": nodeProps.tooltipIndex\n  })), arrow, text);\n}\nfunction ContentItemWithEvents(props) {\n  var dispatch = useAppDispatch();\n  var activeCoordinate = {\n    x: props.nodeProps.x + props.nodeProps.width / 2,\n    y: props.nodeProps.y + props.nodeProps.height / 2\n  };\n  var onMouseEnter = () => {\n    dispatch(setActiveMouseOverItemIndex({\n      activeIndex: props.nodeProps.tooltipIndex,\n      activeDataKey: props.dataKey,\n      activeCoordinate\n    }));\n  };\n  var onMouseLeave = () => {\n    // clearing state on mouseLeaveItem causes re-rendering issues\n    // we don't actually want to do this for TreeMap - we clear state when we leave the entire chart instead\n  };\n  var onClick = () => {\n    dispatch(setActiveClickItemIndex({\n      activeIndex: props.nodeProps.tooltipIndex,\n      activeDataKey: props.dataKey,\n      activeCoordinate\n    }));\n  };\n  return /*#__PURE__*/React.createElement(ContentItem, _extends({}, props, {\n    onMouseEnter: onMouseEnter,\n    onMouseLeave: onMouseLeave,\n    onClick: onClick\n  }));\n}\nfunction getTooltipEntrySettings(_ref3) {\n  var {\n    props,\n    currentRoot\n  } = _ref3;\n  var {\n    dataKey,\n    nameKey,\n    stroke,\n    fill\n  } = props;\n  return {\n    dataDefinedOnItem: currentRoot,\n    positions: undefined,\n    // TODO I think Treemap has the capability of computing positions and supporting defaultIndex? Except it doesn't yet\n    settings: {\n      stroke,\n      strokeWidth: undefined,\n      fill,\n      dataKey,\n      nameKey,\n      name: undefined,\n      // Each TreemapNode has its own name\n      hide: false,\n      type: undefined,\n      color: fill,\n      unit: ''\n    }\n  };\n}\n\n// Why is margin not a treemap prop? No clue. Probably it should be\nvar defaultTreemapMargin = {\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0\n};\nfunction TreemapItem(_ref4) {\n  var {\n    content,\n    nodeProps,\n    isLeaf,\n    treemapProps,\n    onNestClick\n  } = _ref4;\n  var {\n    isAnimationActive,\n    animationBegin,\n    animationDuration,\n    animationEasing,\n    isUpdateAnimationActive,\n    type,\n    colorPanel,\n    dataKey,\n    onAnimationStart,\n    onAnimationEnd,\n    onMouseEnter: onMouseEnterFromProps,\n    onClick: onItemClickFromProps,\n    onMouseLeave: onMouseLeaveFromProps\n  } = treemapProps;\n  var {\n    width,\n    height,\n    x,\n    y\n  } = nodeProps;\n  var translateX = -x - width;\n  var translateY = 0;\n  var onMouseEnter = e => {\n    if ((isLeaf || type === 'nest') && typeof onMouseEnterFromProps === 'function') {\n      onMouseEnterFromProps(nodeProps, e);\n    }\n  };\n  var onMouseLeave = e => {\n    if ((isLeaf || type === 'nest') && typeof onMouseLeaveFromProps === 'function') {\n      onMouseLeaveFromProps(nodeProps, e);\n    }\n  };\n  var onClick = () => {\n    if (type === 'nest') {\n      onNestClick(nodeProps);\n    }\n    if ((isLeaf || type === 'nest') && typeof onItemClickFromProps === 'function') {\n      onItemClickFromProps(nodeProps);\n    }\n  };\n  var handleAnimationEnd = useCallback(() => {\n    if (typeof onAnimationEnd === 'function') {\n      onAnimationEnd();\n    }\n  }, [onAnimationEnd]);\n  var handleAnimationStart = useCallback(() => {\n    if (typeof onAnimationStart === 'function') {\n      onAnimationStart();\n    }\n  }, [onAnimationStart]);\n  return /*#__PURE__*/React.createElement(CSSTransitionAnimate, {\n    animationId: \"treemap-\".concat(nodeProps.tooltipIndex),\n    from: \"translate(\".concat(translateX, \"px, \").concat(translateY, \"px)\"),\n    to: \"translate(0, 0)\",\n    attributeName: \"transform\",\n    begin: animationBegin,\n    easing: animationEasing,\n    isActive: isAnimationActive,\n    duration: animationDuration,\n    onAnimationStart: handleAnimationStart,\n    onAnimationEnd: handleAnimationEnd\n  }, style => /*#__PURE__*/React.createElement(Layer, {\n    onMouseEnter: onMouseEnter,\n    onMouseLeave: onMouseLeave,\n    onClick: onClick,\n    style: _objectSpread(_objectSpread({}, style), {}, {\n      transformOrigin: \"\".concat(x, \" \").concat(y)\n    })\n  }, /*#__PURE__*/React.createElement(ContentItemWithEvents, {\n    content: content,\n    dataKey: dataKey,\n    nodeProps: _objectSpread(_objectSpread({}, nodeProps), {}, {\n      isAnimationActive,\n      isUpdateAnimationActive: !isUpdateAnimationActive,\n      width,\n      height,\n      x,\n      y\n    }),\n    type: type,\n    colorPanel: colorPanel\n  })));\n}\nclass TreemapWithState extends PureComponent {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"state\", _objectSpread({}, defaultState));\n    _defineProperty(this, \"handleClick\", node => {\n      var {\n        onClick,\n        type\n      } = this.props;\n      if (type === 'nest' && node.children) {\n        var {\n          width,\n          height,\n          dataKey,\n          nameKey,\n          aspectRatio\n        } = this.props;\n        var root = computeNode({\n          depth: 0,\n          node: _objectSpread(_objectSpread({}, node), {}, {\n            x: 0,\n            y: 0,\n            width,\n            height\n          }),\n          index: 0,\n          dataKey,\n          nameKey,\n          // with Treemap nesting, should this continue nesting the index or start from empty string?\n          nestedActiveTooltipIndex: node.tooltipIndex\n        });\n        var formatRoot = squarify(root, aspectRatio);\n        var {\n          nestIndex\n        } = this.state;\n        nestIndex.push(node);\n        this.setState({\n          formatRoot,\n          currentRoot: root,\n          nestIndex\n        });\n      }\n      if (onClick) {\n        onClick(node);\n      }\n    });\n    _defineProperty(this, \"handleTouchMove\", e => {\n      var touchEvent = e.touches[0];\n      var target = document.elementFromPoint(touchEvent.clientX, touchEvent.clientY);\n      if (!target || !target.getAttribute || this.state.formatRoot == null) {\n        return;\n      }\n      var itemIndex = target.getAttribute('data-recharts-item-index');\n      var activeNode = treemapPayloadSearcher(this.state.formatRoot, itemIndex);\n      if (!activeNode) {\n        return;\n      }\n      var {\n        dataKey,\n        dispatch\n      } = this.props;\n      var activeCoordinate = {\n        x: activeNode.x + activeNode.width / 2,\n        y: activeNode.y + activeNode.height / 2\n      };\n\n      // Treemap does not support onTouchMove prop, but it could\n      // onTouchMove?.(activeNode, Number(itemIndex), e);\n      dispatch(setActiveMouseOverItemIndex({\n        activeIndex: itemIndex,\n        activeDataKey: dataKey,\n        activeCoordinate\n      }));\n    });\n  }\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.data !== prevState.prevData || nextProps.type !== prevState.prevType || nextProps.width !== prevState.prevWidth || nextProps.height !== prevState.prevHeight || nextProps.dataKey !== prevState.prevDataKey || nextProps.aspectRatio !== prevState.prevAspectRatio) {\n      var root = computeNode({\n        depth: 0,\n        // @ts-expect-error missing properties\n        node: {\n          children: nextProps.data,\n          x: 0,\n          y: 0,\n          width: nextProps.width,\n          height: nextProps.height\n        },\n        index: 0,\n        dataKey: nextProps.dataKey,\n        nameKey: nextProps.nameKey\n      });\n      var formatRoot = squarify(root, nextProps.aspectRatio);\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        formatRoot,\n        currentRoot: root,\n        nestIndex: [root],\n        prevAspectRatio: nextProps.aspectRatio,\n        prevData: nextProps.data,\n        prevWidth: nextProps.width,\n        prevHeight: nextProps.height,\n        prevDataKey: nextProps.dataKey,\n        prevType: nextProps.type\n      });\n    }\n    return null;\n  }\n  handleNestIndex(node, i) {\n    var {\n      nestIndex\n    } = this.state;\n    var {\n      width,\n      height,\n      dataKey,\n      nameKey,\n      aspectRatio\n    } = this.props;\n    var root = computeNode({\n      depth: 0,\n      node: _objectSpread(_objectSpread({}, node), {}, {\n        x: 0,\n        y: 0,\n        width,\n        height\n      }),\n      index: 0,\n      dataKey,\n      nameKey,\n      // with Treemap nesting, should this continue nesting the index or start from empty string?\n      nestedActiveTooltipIndex: node.tooltipIndex\n    });\n    var formatRoot = squarify(root, aspectRatio);\n    nestIndex = nestIndex.slice(0, i + 1);\n    this.setState({\n      formatRoot,\n      currentRoot: node,\n      nestIndex\n    });\n  }\n  renderNode(root, node) {\n    var {\n      content,\n      type\n    } = this.props;\n    var nodeProps = _objectSpread(_objectSpread(_objectSpread({}, svgPropertiesNoEvents(this.props)), node), {}, {\n      root\n    });\n    var isLeaf = !node.children || !node.children.length;\n    var {\n      currentRoot\n    } = this.state;\n    var isCurrentRootChild = ((currentRoot === null || currentRoot === void 0 ? void 0 : currentRoot.children) || []).filter(item => item.depth === node.depth && item.name === node.name);\n    if (!isCurrentRootChild.length && root.depth && type === 'nest') {\n      return null;\n    }\n    return /*#__PURE__*/React.createElement(Layer, {\n      key: \"recharts-treemap-node-\".concat(nodeProps.x, \"-\").concat(nodeProps.y, \"-\").concat(nodeProps.name),\n      className: \"recharts-treemap-depth-\".concat(node.depth)\n    }, /*#__PURE__*/React.createElement(TreemapItem, {\n      isLeaf: isLeaf,\n      content: content,\n      nodeProps: nodeProps,\n      treemapProps: this.props,\n      onNestClick: this.handleClick\n    }), node.children && node.children.length ? node.children.map(child => this.renderNode(node, child)) : null);\n  }\n  renderAllNodes() {\n    var {\n      formatRoot\n    } = this.state;\n    if (!formatRoot) {\n      return null;\n    }\n    return this.renderNode(formatRoot, formatRoot);\n  }\n\n  // render nest treemap\n  renderNestIndex() {\n    var {\n      nameKey,\n      nestIndexContent\n    } = this.props;\n    var {\n      nestIndex\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"recharts-treemap-nest-index-wrapper\",\n      style: {\n        marginTop: '8px',\n        textAlign: 'center'\n      }\n    }, nestIndex.map((item, i) => {\n      // TODO need to verify nameKey type\n      var name = get(item, nameKey, 'root');\n      var content;\n      if (/*#__PURE__*/React.isValidElement(nestIndexContent)) {\n        // the cloned content is ignored at all times - let's remove it?\n        content = /*#__PURE__*/React.cloneElement(nestIndexContent, item, i);\n      }\n      if (typeof nestIndexContent === 'function') {\n        content = nestIndexContent(item, i);\n      } else {\n        content = name;\n      }\n      return (\n        /*#__PURE__*/\n        // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions\n        React.createElement(\"div\", {\n          onClick: this.handleNestIndex.bind(this, item, i),\n          key: \"nest-index-\".concat(uniqueId()),\n          className: \"recharts-treemap-nest-index-box\",\n          style: {\n            cursor: 'pointer',\n            display: 'inline-block',\n            padding: '0 7px',\n            background: '#000',\n            color: '#fff',\n            marginRight: '3px'\n          }\n        }, content)\n      );\n    }));\n  }\n  render() {\n    var _this$props = this.props,\n      {\n        width,\n        height,\n        className,\n        style,\n        children,\n        type\n      } = _this$props,\n      others = _objectWithoutProperties(_this$props, _excluded);\n    var attrs = svgPropertiesNoEvents(others);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SetTooltipEntrySettings, {\n      fn: getTooltipEntrySettings,\n      args: {\n        props: this.props,\n        currentRoot: this.state.currentRoot\n      }\n    }), /*#__PURE__*/React.createElement(Surface, _extends({}, attrs, {\n      width: width,\n      height: type === 'nest' ? height - 30 : height,\n      onTouchMove: this.handleTouchMove\n    }), this.renderAllNodes(), children), type === 'nest' && this.renderNestIndex());\n  }\n}\n_defineProperty(TreemapWithState, \"displayName\", 'Treemap');\nfunction TreemapDispatchInject(props) {\n  var dispatch = useAppDispatch();\n  var width = useChartWidth();\n  var height = useChartHeight();\n  if (!isPositiveNumber(width) || !isPositiveNumber(height)) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(TreemapWithState, _extends({}, props, {\n    width: width,\n    height: height,\n    dispatch: dispatch\n  }));\n}\nexport function Treemap(outsideProps) {\n  var _props$className;\n  var props = resolveDefaultProps(outsideProps, defaultTreeMapProps);\n  var {\n    className,\n    style,\n    width,\n    height\n  } = props;\n  var [tooltipPortal, setTooltipPortal] = useState(null);\n  return /*#__PURE__*/React.createElement(RechartsStoreProvider, {\n    preloadedState: {\n      options\n    },\n    reduxStoreName: (_props$className = props.className) !== null && _props$className !== void 0 ? _props$className : 'Treemap'\n  }, /*#__PURE__*/React.createElement(ReportChartMargin, {\n    margin: defaultTreemapMargin\n  }), /*#__PURE__*/React.createElement(RechartsWrapper, {\n    dispatchTouchEvents: false,\n    className: className,\n    style: style,\n    width: width,\n    height: height\n    /*\n     * Treemap has a bug where it doesn't include strokeWidth in its dimension calculation\n     * which makes the actual chart exactly {strokeWidth} larger than asked for.\n     * It's not a huge deal usually, but it makes the responsive option cycle infinitely.\n     */,\n    responsive: false,\n    ref: node => {\n      if (tooltipPortal == null && node != null) {\n        setTooltipPortal(node);\n      }\n    },\n    onMouseEnter: undefined,\n    onMouseLeave: undefined,\n    onClick: undefined,\n    onMouseMove: undefined,\n    onMouseDown: undefined,\n    onMouseUp: undefined,\n    onContextMenu: undefined,\n    onDoubleClick: undefined,\n    onTouchStart: undefined,\n    onTouchMove: undefined,\n    onTouchEnd: undefined\n  }, /*#__PURE__*/React.createElement(TooltipPortalContext.Provider, {\n    value: tooltipPortal\n  }, /*#__PURE__*/React.createElement(TreemapDispatchInject, props))));\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}