{"ast":null,"code":"import { createSlice, current, prepareAutoBatched } from '@reduxjs/toolkit';\nimport { castDraft } from 'immer';\n\n/**\n * Unique ID of the graphical item.\n * This is used to identify the graphical item in the state and in the React tree.\n * This is required for every graphical item - it's either provided by the user or generated automatically.\n */\n\nvar initialState = {\n  cartesianItems: [],\n  polarItems: []\n};\nvar graphicalItemsSlice = createSlice({\n  name: 'graphicalItems',\n  initialState,\n  reducers: {\n    addCartesianGraphicalItem: {\n      reducer(state, action) {\n        state.cartesianItems.push(castDraft(action.payload));\n      },\n      prepare: prepareAutoBatched()\n    },\n    replaceCartesianGraphicalItem: {\n      reducer(state, action) {\n        var {\n          prev,\n          next\n        } = action.payload;\n        var index = current(state).cartesianItems.indexOf(castDraft(prev));\n        if (index > -1) {\n          state.cartesianItems[index] = castDraft(next);\n        }\n      },\n      prepare: prepareAutoBatched()\n    },\n    removeCartesianGraphicalItem: {\n      reducer(state, action) {\n        var index = current(state).cartesianItems.indexOf(castDraft(action.payload));\n        if (index > -1) {\n          state.cartesianItems.splice(index, 1);\n        }\n      },\n      prepare: prepareAutoBatched()\n    },\n    addPolarGraphicalItem: {\n      reducer(state, action) {\n        state.polarItems.push(castDraft(action.payload));\n      },\n      prepare: prepareAutoBatched()\n    },\n    removePolarGraphicalItem: {\n      reducer(state, action) {\n        var index = current(state).polarItems.indexOf(castDraft(action.payload));\n        if (index > -1) {\n          state.polarItems.splice(index, 1);\n        }\n      },\n      prepare: prepareAutoBatched()\n    }\n  }\n});\nexport var {\n  addCartesianGraphicalItem,\n  replaceCartesianGraphicalItem,\n  removeCartesianGraphicalItem,\n  addPolarGraphicalItem,\n  removePolarGraphicalItem\n} = graphicalItemsSlice.actions;\nexport var graphicalItemsReducer = graphicalItemsSlice.reducer;","map":{"version":3,"names":["createSlice","current","prepareAutoBatched","castDraft","initialState","cartesianItems","polarItems","graphicalItemsSlice","name","reducers","addCartesianGraphicalItem","reducer","state","action","push","payload","prepare","replaceCartesianGraphicalItem","prev","next","index","indexOf","removeCartesianGraphicalItem","splice","addPolarGraphicalItem","removePolarGraphicalItem","actions","graphicalItemsReducer"],"sources":["D:/CN/MERN Project/InnerSpace/frontend/node_modules/recharts/es6/state/graphicalItemsSlice.js"],"sourcesContent":["import { createSlice, current, prepareAutoBatched } from '@reduxjs/toolkit';\nimport { castDraft } from 'immer';\n\n/**\n * Unique ID of the graphical item.\n * This is used to identify the graphical item in the state and in the React tree.\n * This is required for every graphical item - it's either provided by the user or generated automatically.\n */\n\nvar initialState = {\n  cartesianItems: [],\n  polarItems: []\n};\nvar graphicalItemsSlice = createSlice({\n  name: 'graphicalItems',\n  initialState,\n  reducers: {\n    addCartesianGraphicalItem: {\n      reducer(state, action) {\n        state.cartesianItems.push(castDraft(action.payload));\n      },\n      prepare: prepareAutoBatched()\n    },\n    replaceCartesianGraphicalItem: {\n      reducer(state, action) {\n        var {\n          prev,\n          next\n        } = action.payload;\n        var index = current(state).cartesianItems.indexOf(castDraft(prev));\n        if (index > -1) {\n          state.cartesianItems[index] = castDraft(next);\n        }\n      },\n      prepare: prepareAutoBatched()\n    },\n    removeCartesianGraphicalItem: {\n      reducer(state, action) {\n        var index = current(state).cartesianItems.indexOf(castDraft(action.payload));\n        if (index > -1) {\n          state.cartesianItems.splice(index, 1);\n        }\n      },\n      prepare: prepareAutoBatched()\n    },\n    addPolarGraphicalItem: {\n      reducer(state, action) {\n        state.polarItems.push(castDraft(action.payload));\n      },\n      prepare: prepareAutoBatched()\n    },\n    removePolarGraphicalItem: {\n      reducer(state, action) {\n        var index = current(state).polarItems.indexOf(castDraft(action.payload));\n        if (index > -1) {\n          state.polarItems.splice(index, 1);\n        }\n      },\n      prepare: prepareAutoBatched()\n    }\n  }\n});\nexport var {\n  addCartesianGraphicalItem,\n  replaceCartesianGraphicalItem,\n  removeCartesianGraphicalItem,\n  addPolarGraphicalItem,\n  removePolarGraphicalItem\n} = graphicalItemsSlice.actions;\nexport var graphicalItemsReducer = graphicalItemsSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,OAAO,EAAEC,kBAAkB,QAAQ,kBAAkB;AAC3E,SAASC,SAAS,QAAQ,OAAO;;AAEjC;AACA;AACA;AACA;AACA;;AAEA,IAAIC,YAAY,GAAG;EACjBC,cAAc,EAAE,EAAE;EAClBC,UAAU,EAAE;AACd,CAAC;AACD,IAAIC,mBAAmB,GAAGP,WAAW,CAAC;EACpCQ,IAAI,EAAE,gBAAgB;EACtBJ,YAAY;EACZK,QAAQ,EAAE;IACRC,yBAAyB,EAAE;MACzBC,OAAOA,CAACC,KAAK,EAAEC,MAAM,EAAE;QACrBD,KAAK,CAACP,cAAc,CAACS,IAAI,CAACX,SAAS,CAACU,MAAM,CAACE,OAAO,CAAC,CAAC;MACtD,CAAC;MACDC,OAAO,EAAEd,kBAAkB,CAAC;IAC9B,CAAC;IACDe,6BAA6B,EAAE;MAC7BN,OAAOA,CAACC,KAAK,EAAEC,MAAM,EAAE;QACrB,IAAI;UACFK,IAAI;UACJC;QACF,CAAC,GAAGN,MAAM,CAACE,OAAO;QAClB,IAAIK,KAAK,GAAGnB,OAAO,CAACW,KAAK,CAAC,CAACP,cAAc,CAACgB,OAAO,CAAClB,SAAS,CAACe,IAAI,CAAC,CAAC;QAClE,IAAIE,KAAK,GAAG,CAAC,CAAC,EAAE;UACdR,KAAK,CAACP,cAAc,CAACe,KAAK,CAAC,GAAGjB,SAAS,CAACgB,IAAI,CAAC;QAC/C;MACF,CAAC;MACDH,OAAO,EAAEd,kBAAkB,CAAC;IAC9B,CAAC;IACDoB,4BAA4B,EAAE;MAC5BX,OAAOA,CAACC,KAAK,EAAEC,MAAM,EAAE;QACrB,IAAIO,KAAK,GAAGnB,OAAO,CAACW,KAAK,CAAC,CAACP,cAAc,CAACgB,OAAO,CAAClB,SAAS,CAACU,MAAM,CAACE,OAAO,CAAC,CAAC;QAC5E,IAAIK,KAAK,GAAG,CAAC,CAAC,EAAE;UACdR,KAAK,CAACP,cAAc,CAACkB,MAAM,CAACH,KAAK,EAAE,CAAC,CAAC;QACvC;MACF,CAAC;MACDJ,OAAO,EAAEd,kBAAkB,CAAC;IAC9B,CAAC;IACDsB,qBAAqB,EAAE;MACrBb,OAAOA,CAACC,KAAK,EAAEC,MAAM,EAAE;QACrBD,KAAK,CAACN,UAAU,CAACQ,IAAI,CAACX,SAAS,CAACU,MAAM,CAACE,OAAO,CAAC,CAAC;MAClD,CAAC;MACDC,OAAO,EAAEd,kBAAkB,CAAC;IAC9B,CAAC;IACDuB,wBAAwB,EAAE;MACxBd,OAAOA,CAACC,KAAK,EAAEC,MAAM,EAAE;QACrB,IAAIO,KAAK,GAAGnB,OAAO,CAACW,KAAK,CAAC,CAACN,UAAU,CAACe,OAAO,CAAClB,SAAS,CAACU,MAAM,CAACE,OAAO,CAAC,CAAC;QACxE,IAAIK,KAAK,GAAG,CAAC,CAAC,EAAE;UACdR,KAAK,CAACN,UAAU,CAACiB,MAAM,CAACH,KAAK,EAAE,CAAC,CAAC;QACnC;MACF,CAAC;MACDJ,OAAO,EAAEd,kBAAkB,CAAC;IAC9B;EACF;AACF,CAAC,CAAC;AACF,OAAO,IAAI;EACTQ,yBAAyB;EACzBO,6BAA6B;EAC7BK,4BAA4B;EAC5BE,qBAAqB;EACrBC;AACF,CAAC,GAAGlB,mBAAmB,CAACmB,OAAO;AAC/B,OAAO,IAAIC,qBAAqB,GAAGpB,mBAAmB,CAACI,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}