{"ast":null,"code":"var _jsxFileName = \"D:\\\\CN\\\\MERN Project\\\\InnerSpace\\\\frontend\\\\src\\\\components\\\\JournalList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getJournals, deleteJournal } from \"../services/journalService\";\nimport AddJournalForm from \"./AddJournalForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JournalList = () => {\n  _s();\n  const [journals, setJournals] = useState([]);\n  const fetchJournals = async () => {\n    try {\n      const res = await getJournals();\n      setJournals(res.data.data);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const handleDelete = async id => {\n    try {\n      await deleteJournal(id);\n      fetchJournals();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  useEffect(() => {\n    fetchJournals();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AddJournalForm, {\n      onAdd: fetchJournals\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"MindSpace Journals\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), journals.map(j => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid #ccc\",\n        padding: \"10px\",\n        margin: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Mood:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 14\n        }, this), \" \", j.mood]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Stress Level:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 14\n        }, this), \" \", j.stressLevel]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Note:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 14\n        }, this), \" \", j.note]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 14\n        }, this), \" \", new Date(j.date).toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDelete(j._id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, j._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(JournalList, \"BnVvExlEbwan4SKvnz3UUwz7K0Q=\");\n_c = JournalList;\nexport default JournalList;\nvar _c;\n$RefreshReg$(_c, \"JournalList\");","map":{"version":3,"names":["React","useEffect","useState","getJournals","deleteJournal","AddJournalForm","jsxDEV","_jsxDEV","JournalList","_s","journals","setJournals","fetchJournals","res","data","err","console","error","handleDelete","id","children","onAdd","fileName","_jsxFileName","lineNumber","columnNumber","map","j","style","border","padding","margin","mood","stressLevel","note","Date","date","toLocaleString","onClick","_id","_c","$RefreshReg$"],"sources":["D:/CN/MERN Project/InnerSpace/frontend/src/components/JournalList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { getJournals, deleteJournal } from \"../services/journalService\";\r\nimport AddJournalForm from \"./AddJournalForm\";\r\n\r\nconst JournalList = () => {\r\n  const [journals, setJournals] = useState([]);\r\n\r\n  const fetchJournals = async () => {\r\n    try {\r\n      const res = await getJournals();\r\n      setJournals(res.data.data);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await deleteJournal(id);\r\n      fetchJournals();\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchJournals();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <AddJournalForm onAdd={fetchJournals} />\r\n      <h2>MindSpace Journals</h2>\r\n      {journals.map((j) => (\r\n        <div key={j._id} style={{border: \"1px solid #ccc\", padding: \"10px\", margin: \"10px\"}}>\r\n          <p><strong>Mood:</strong> {j.mood}</p>\r\n          <p><strong>Stress Level:</strong> {j.stressLevel}</p>\r\n          <p><strong>Note:</strong> {j.note}</p>\r\n          <p><strong>Date:</strong> {new Date(j.date).toLocaleString()}</p>\r\n          <button onClick={() => handleDelete(j._id)}>Delete</button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JournalList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}