{"ast":null,"code":"var _excluded = [\"id\"],\n  _excluded2 = [\"type\", \"layout\", \"connectNulls\", \"needClip\"],\n  _excluded3 = [\"activeDot\", \"animateNewValues\", \"animationBegin\", \"animationDuration\", \"animationEasing\", \"connectNulls\", \"dot\", \"hide\", \"isAnimationActive\", \"label\", \"legendType\", \"xAxisId\", \"yAxisId\", \"id\"];\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _objectWithoutProperties(e, t) {\n  if (null == e) return {};\n  var o,\n    r,\n    i = _objectWithoutPropertiesLoose(e, t);\n  if (Object.getOwnPropertySymbols) {\n    var n = Object.getOwnPropertySymbols(e);\n    for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n  }\n  return i;\n}\nfunction _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (-1 !== e.indexOf(n)) continue;\n    t[n] = r[n];\n  }\n  return t;\n}\nfunction _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\nimport * as React from 'react';\nimport { Component, useCallback, useMemo, useRef, useState } from 'react';\nimport { clsx } from 'clsx';\nimport { Curve } from '../shape/Curve';\nimport { Dot } from '../shape/Dot';\nimport { Layer } from '../container/Layer';\nimport { CartesianLabelListContextProvider, LabelListFromLabelProp } from '../component/LabelList';\nimport { interpolate, isNullish } from '../util/DataUtils';\nimport { isClipDot } from '../util/ReactUtils';\nimport { Global } from '../util/Global';\nimport { getCateCoordinateOfLine, getTooltipNameProp, getValueByDataKey } from '../util/ChartUtils';\nimport { ActivePoints } from '../component/ActivePoints';\nimport { SetTooltipEntrySettings } from '../state/SetTooltipEntrySettings';\nimport { SetErrorBarContext } from '../context/ErrorBarContext';\nimport { GraphicalItemClipPath, useNeedsClip } from './GraphicalItemClipPath';\nimport { useChartLayout } from '../context/chartLayoutContext';\nimport { useIsPanorama } from '../context/PanoramaContext';\nimport { selectLinePoints } from '../state/selectors/lineSelectors';\nimport { useAppSelector } from '../state/hooks';\nimport { SetLegendPayload } from '../state/SetLegendPayload';\nimport { useAnimationId } from '../util/useAnimationId';\nimport { resolveDefaultProps } from '../util/resolveDefaultProps';\nimport { usePlotArea } from '../hooks';\nimport { RegisterGraphicalItemId } from '../context/RegisterGraphicalItemId';\nimport { SetCartesianGraphicalItem } from '../state/SetGraphicalItem';\nimport { svgPropertiesNoEvents } from '../util/svgPropertiesNoEvents';\nimport { JavascriptAnimate } from '../animation/JavascriptAnimate';\nimport { svgPropertiesAndEvents, svgPropertiesAndEventsFromUnknown } from '../util/svgPropertiesAndEvents';\nimport { getRadiusAndStrokeWidthFromDot } from '../util/getRadiusAndStrokeWidthFromDot';\n\n/**\n * Internal props, combination of external props + defaultProps + private Recharts state\n */\n\n/**\n * External props, intended for end users to fill in\n */\n\n/**\n * Because of naming conflict, we are forced to ignore certain (valid) SVG attributes.\n */\n\nvar computeLegendPayloadFromAreaData = props => {\n  var {\n    dataKey,\n    name,\n    stroke,\n    legendType,\n    hide\n  } = props;\n  return [{\n    inactive: hide,\n    dataKey,\n    type: legendType,\n    color: stroke,\n    value: getTooltipNameProp(name, dataKey),\n    payload: props\n  }];\n};\nfunction getTooltipEntrySettings(props) {\n  var {\n    dataKey,\n    data,\n    stroke,\n    strokeWidth,\n    fill,\n    name,\n    hide,\n    unit\n  } = props;\n  return {\n    dataDefinedOnItem: data,\n    positions: undefined,\n    settings: {\n      stroke,\n      strokeWidth,\n      fill,\n      dataKey,\n      nameKey: undefined,\n      name: getTooltipNameProp(name, dataKey),\n      hide,\n      type: props.tooltipType,\n      color: props.stroke,\n      unit\n    }\n  };\n}\nvar generateSimpleStrokeDasharray = (totalLength, length) => {\n  return \"\".concat(length, \"px \").concat(totalLength - length, \"px\");\n};\nfunction repeat(lines, count) {\n  var linesUnit = lines.length % 2 !== 0 ? [...lines, 0] : lines;\n  var result = [];\n  for (var i = 0; i < count; ++i) {\n    result = [...result, ...linesUnit];\n  }\n  return result;\n}\nvar getStrokeDasharray = (length, totalLength, lines) => {\n  var lineLength = lines.reduce((pre, next) => pre + next);\n\n  // if lineLength is 0 return the default when no strokeDasharray is provided\n  if (!lineLength) {\n    return generateSimpleStrokeDasharray(totalLength, length);\n  }\n  var count = Math.floor(length / lineLength);\n  var remainLength = length % lineLength;\n  var restLength = totalLength - length;\n  var remainLines = [];\n  for (var i = 0, sum = 0; i < lines.length; sum += lines[i], ++i) {\n    if (sum + lines[i] > remainLength) {\n      remainLines = [...lines.slice(0, i), remainLength - sum];\n      break;\n    }\n  }\n  var emptyLines = remainLines.length % 2 === 0 ? [0, restLength] : [restLength];\n  return [...repeat(lines, count), ...remainLines, ...emptyLines].map(line => \"\".concat(line, \"px\")).join(', ');\n};\nfunction renderDotItem(option, props) {\n  var dotItem;\n  if (/*#__PURE__*/React.isValidElement(option)) {\n    // @ts-expect-error when cloning, the event handler types do not match\n    dotItem = /*#__PURE__*/React.cloneElement(option, props);\n  } else if (typeof option === 'function') {\n    dotItem = option(props);\n  } else {\n    var className = clsx('recharts-line-dot', typeof option !== 'boolean' ? option.className : '');\n    dotItem = /*#__PURE__*/React.createElement(Dot, _extends({}, props, {\n      className: className\n    }));\n  }\n  return dotItem;\n}\nfunction shouldRenderDots(points, dot) {\n  if (points == null) {\n    return false;\n  }\n  if (dot) {\n    return true;\n  }\n  return points.length === 1;\n}\nfunction Dots(_ref) {\n  var {\n    clipPathId,\n    points,\n    props\n  } = _ref;\n  var {\n    dot,\n    dataKey,\n    needClip\n  } = props;\n  if (!shouldRenderDots(points, dot)) {\n    return null;\n  }\n\n  /*\n   * Exclude ID from the props passed to the Dots component\n   * because then the ID would be applied to multiple dots, and it would no longer be unique.\n   */\n  var {\n      id\n    } = props,\n    propsWithoutId = _objectWithoutProperties(props, _excluded);\n  var clipDot = isClipDot(dot);\n  var lineProps = svgPropertiesNoEvents(propsWithoutId);\n  var customDotProps = svgPropertiesAndEventsFromUnknown(dot);\n  var dots = points.map((entry, i) => {\n    var dotProps = _objectSpread(_objectSpread(_objectSpread({\n      key: \"dot-\".concat(i),\n      r: 3\n    }, lineProps), customDotProps), {}, {\n      index: i,\n      cx: entry.x,\n      cy: entry.y,\n      dataKey,\n      value: entry.value,\n      payload: entry.payload,\n      // @ts-expect-error we're passing extra property 'points' that the props are not expecting\n      points\n    });\n    return renderDotItem(dot, dotProps);\n  });\n  var dotsProps = {\n    clipPath: needClip ? \"url(#clipPath-\".concat(clipDot ? '' : 'dots-').concat(clipPathId, \")\") : undefined\n  };\n  return /*#__PURE__*/React.createElement(Layer, _extends({\n    className: \"recharts-line-dots\",\n    key: \"dots\"\n  }, dotsProps), dots);\n}\nfunction LineLabelListProvider(_ref2) {\n  var {\n    showLabels,\n    children,\n    points\n  } = _ref2;\n  var labelListEntries = useMemo(() => {\n    return points === null || points === void 0 ? void 0 : points.map(point => {\n      var viewBox = {\n        x: point.x,\n        y: point.y,\n        width: 0,\n        height: 0\n      };\n      return _objectSpread(_objectSpread({}, viewBox), {}, {\n        value: point.value,\n        payload: point.payload,\n        viewBox,\n        /*\n         * Line is not passing parentViewBox to the LabelList so the labels can escape - looks like a bug, should we pass parentViewBox?\n         * Or should this just be the root chart viewBox?\n         */\n        parentViewBox: undefined,\n        fill: undefined\n      });\n    });\n  }, [points]);\n  return /*#__PURE__*/React.createElement(CartesianLabelListContextProvider, {\n    value: showLabels ? labelListEntries : null\n  }, children);\n}\nfunction StaticCurve(_ref3) {\n  var {\n    clipPathId,\n    pathRef,\n    points,\n    strokeDasharray,\n    props\n  } = _ref3;\n  var {\n      type,\n      layout,\n      connectNulls,\n      needClip\n    } = props,\n    others = _objectWithoutProperties(props, _excluded2);\n  var curveProps = _objectSpread(_objectSpread({}, svgPropertiesAndEvents(others)), {}, {\n    fill: 'none',\n    className: 'recharts-line-curve',\n    clipPath: needClip ? \"url(#clipPath-\".concat(clipPathId, \")\") : undefined,\n    points,\n    type,\n    layout,\n    connectNulls,\n    strokeDasharray: strokeDasharray !== null && strokeDasharray !== void 0 ? strokeDasharray : props.strokeDasharray\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, (points === null || points === void 0 ? void 0 : points.length) > 1 && /*#__PURE__*/React.createElement(Curve, _extends({}, curveProps, {\n    pathRef: pathRef\n  })), /*#__PURE__*/React.createElement(Dots, {\n    points: points,\n    clipPathId: clipPathId,\n    props: props\n  }));\n}\nfunction getTotalLength(mainCurve) {\n  try {\n    return mainCurve && mainCurve.getTotalLength && mainCurve.getTotalLength() || 0;\n  } catch (_unused) {\n    return 0;\n  }\n}\nfunction CurveWithAnimation(_ref4) {\n  var {\n    clipPathId,\n    props,\n    pathRef,\n    previousPointsRef,\n    longestAnimatedLengthRef\n  } = _ref4;\n  var {\n    points,\n    strokeDasharray,\n    isAnimationActive,\n    animationBegin,\n    animationDuration,\n    animationEasing,\n    animateNewValues,\n    width,\n    height,\n    onAnimationEnd,\n    onAnimationStart\n  } = props;\n  var prevPoints = previousPointsRef.current;\n  var animationId = useAnimationId(props, 'recharts-line-');\n  var [isAnimating, setIsAnimating] = useState(false);\n  var showLabels = !isAnimating;\n  var handleAnimationEnd = useCallback(() => {\n    if (typeof onAnimationEnd === 'function') {\n      onAnimationEnd();\n    }\n    setIsAnimating(false);\n  }, [onAnimationEnd]);\n  var handleAnimationStart = useCallback(() => {\n    if (typeof onAnimationStart === 'function') {\n      onAnimationStart();\n    }\n    setIsAnimating(true);\n  }, [onAnimationStart]);\n  var totalLength = getTotalLength(pathRef.current);\n  /*\n   * Here we want to detect if the length animation has been interrupted.\n   * For that we keep a reference to the furthest length that has been animated.\n   *\n   * And then, to keep things smooth, we add to it the current length that is being animated right now.\n   *\n   * If we did Math.max then it makes the length animation \"pause\" but we want to keep it smooth\n   * so in case we have some \"leftover\" length from the previous animation we add it to the current length.\n   *\n   * This is not perfect because the animation changes speed due to easing. The default easing is 'ease' which is not linear\n   * and makes it stand out. But it's good enough I suppose.\n   * If we want to fix it then we need to keep track of multiple animations and their easing and timings.\n   *\n   * If you want to see this in action, try to change the dataKey of the line chart while the initial animation is running.\n   * The Line begins with zero length and slowly grows to the full length. While this growth is in progress,\n   * change the dataKey and the Line will continue growing from where it has grown so far.\n   */\n  var startingPoint = longestAnimatedLengthRef.current;\n  return /*#__PURE__*/React.createElement(LineLabelListProvider, {\n    points: points,\n    showLabels: showLabels\n  }, props.children, /*#__PURE__*/React.createElement(JavascriptAnimate, {\n    animationId: animationId,\n    begin: animationBegin,\n    duration: animationDuration,\n    isActive: isAnimationActive,\n    easing: animationEasing,\n    onAnimationEnd: handleAnimationEnd,\n    onAnimationStart: handleAnimationStart,\n    key: animationId\n  }, t => {\n    var lengthInterpolated = interpolate(startingPoint, totalLength + startingPoint, t);\n    var curLength = Math.min(lengthInterpolated, totalLength);\n    var currentStrokeDasharray;\n    if (isAnimationActive) {\n      if (strokeDasharray) {\n        var lines = \"\".concat(strokeDasharray).split(/[,\\s]+/gim).map(num => parseFloat(num));\n        currentStrokeDasharray = getStrokeDasharray(curLength, totalLength, lines);\n      } else {\n        currentStrokeDasharray = generateSimpleStrokeDasharray(totalLength, curLength);\n      }\n    } else {\n      currentStrokeDasharray = strokeDasharray == null ? undefined : String(strokeDasharray);\n    }\n    if (prevPoints) {\n      var prevPointsDiffFactor = prevPoints.length / points.length;\n      var stepData = t === 1 ? points : points.map((entry, index) => {\n        var prevPointIndex = Math.floor(index * prevPointsDiffFactor);\n        if (prevPoints[prevPointIndex]) {\n          var prev = prevPoints[prevPointIndex];\n          return _objectSpread(_objectSpread({}, entry), {}, {\n            x: interpolate(prev.x, entry.x, t),\n            y: interpolate(prev.y, entry.y, t)\n          });\n        }\n\n        // magic number of faking previous x and y location\n        if (animateNewValues) {\n          return _objectSpread(_objectSpread({}, entry), {}, {\n            x: interpolate(width * 2, entry.x, t),\n            y: interpolate(height / 2, entry.y, t)\n          });\n        }\n        return _objectSpread(_objectSpread({}, entry), {}, {\n          x: entry.x,\n          y: entry.y\n        });\n      });\n      // eslint-disable-next-line no-param-reassign\n      previousPointsRef.current = stepData;\n      return /*#__PURE__*/React.createElement(StaticCurve, {\n        props: props,\n        points: stepData,\n        clipPathId: clipPathId,\n        pathRef: pathRef,\n        strokeDasharray: currentStrokeDasharray\n      });\n    }\n\n    /*\n     * Here it is important to wait a little bit with updating the previousPointsRef\n     * before the animation has a time to initialize.\n     * If we set the previous pointsRef immediately, we set it before the Legend height it calculated\n     * and before pathRef is set.\n     * If that happens, the Line will re-render again after Legend had reported its height\n     * which will start a new animation with the previous points as the starting point\n     * which gives the effect of the Line animating slightly upwards (where the animation distance equals the Legend height).\n     * Waiting for t > 0 is indirect but good enough to ensure that the Legend height is calculated and animation works properly.\n     *\n     * Total length similarly is calculated from the pathRef. We should not update the previousPointsRef\n     * before the pathRef is set, otherwise we will have a wrong total length.\n     */\n    if (t > 0 && totalLength > 0) {\n      // eslint-disable-next-line no-param-reassign\n      previousPointsRef.current = points;\n      /*\n       * totalLength is set from a ref and is not updated in the first tick of the animation.\n       * It defaults to zero which is exactly what we want here because we want to grow from zero,\n       * however the same happens when the data change.\n       *\n       * In that case we want to remember the previous length and continue from there, and only animate the shape.\n       *\n       * Therefore the totalLength > 0 check.\n       *\n       * The Animate is about to fire handleAnimationStart which will update the state\n       * and cause a re-render and read a new proper totalLength which will be used in the next tick\n       * and update the longestAnimatedLengthRef.\n       */\n      // eslint-disable-next-line no-param-reassign\n      longestAnimatedLengthRef.current = curLength;\n    }\n    return /*#__PURE__*/React.createElement(StaticCurve, {\n      props: props,\n      points: points,\n      clipPathId: clipPathId,\n      pathRef: pathRef,\n      strokeDasharray: currentStrokeDasharray\n    });\n  }), /*#__PURE__*/React.createElement(LabelListFromLabelProp, {\n    label: props.label\n  }));\n}\nfunction RenderCurve(_ref5) {\n  var {\n    clipPathId,\n    props\n  } = _ref5;\n  var previousPointsRef = useRef(null);\n  var longestAnimatedLengthRef = useRef(0);\n  var pathRef = useRef(null);\n  return /*#__PURE__*/React.createElement(CurveWithAnimation, {\n    props: props,\n    clipPathId: clipPathId,\n    previousPointsRef: previousPointsRef,\n    longestAnimatedLengthRef: longestAnimatedLengthRef,\n    pathRef: pathRef\n  });\n}\nvar errorBarDataPointFormatter = (dataPoint, dataKey) => {\n  return {\n    x: dataPoint.x,\n    y: dataPoint.y,\n    value: dataPoint.value,\n    // @ts-expect-error getValueByDataKey does not validate the output type\n    errorVal: getValueByDataKey(dataPoint.payload, dataKey)\n  };\n};\n\n// eslint-disable-next-line react/prefer-stateless-function\nclass LineWithState extends Component {\n  render() {\n    var {\n      hide,\n      dot,\n      points,\n      className,\n      xAxisId,\n      yAxisId,\n      top,\n      left,\n      width,\n      height,\n      id,\n      needClip\n    } = this.props;\n    if (hide) {\n      return null;\n    }\n    var layerClass = clsx('recharts-line', className);\n    var clipPathId = id;\n    var {\n      r,\n      strokeWidth\n    } = getRadiusAndStrokeWidthFromDot(dot);\n    var clipDot = isClipDot(dot);\n    var dotSize = r * 2 + strokeWidth;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Layer, {\n      className: layerClass\n    }, needClip && /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(GraphicalItemClipPath, {\n      clipPathId: clipPathId,\n      xAxisId: xAxisId,\n      yAxisId: yAxisId\n    }), !clipDot && /*#__PURE__*/React.createElement(\"clipPath\", {\n      id: \"clipPath-dots-\".concat(clipPathId)\n    }, /*#__PURE__*/React.createElement(\"rect\", {\n      x: left - dotSize / 2,\n      y: top - dotSize / 2,\n      width: width + dotSize,\n      height: height + dotSize\n    }))), /*#__PURE__*/React.createElement(SetErrorBarContext, {\n      xAxisId: xAxisId,\n      yAxisId: yAxisId,\n      data: points,\n      dataPointFormatter: errorBarDataPointFormatter,\n      errorBarOffset: 0\n    }, /*#__PURE__*/React.createElement(RenderCurve, {\n      props: this.props,\n      clipPathId: clipPathId\n    }))), /*#__PURE__*/React.createElement(ActivePoints, {\n      activeDot: this.props.activeDot,\n      points: points,\n      mainColor: this.props.stroke,\n      itemDataKey: this.props.dataKey\n    }));\n  }\n}\nvar defaultLineProps = {\n  activeDot: true,\n  animateNewValues: true,\n  animationBegin: 0,\n  animationDuration: 1500,\n  animationEasing: 'ease',\n  connectNulls: false,\n  dot: true,\n  fill: '#fff',\n  hide: false,\n  isAnimationActive: !Global.isSsr,\n  label: false,\n  legendType: 'line',\n  stroke: '#3182bd',\n  strokeWidth: 1,\n  xAxisId: 0,\n  yAxisId: 0\n};\nfunction LineImpl(props) {\n  var _resolveDefaultProps = resolveDefaultProps(props, defaultLineProps),\n    {\n      activeDot,\n      animateNewValues,\n      animationBegin,\n      animationDuration,\n      animationEasing,\n      connectNulls,\n      dot,\n      hide,\n      isAnimationActive,\n      label,\n      legendType,\n      xAxisId,\n      yAxisId,\n      id\n    } = _resolveDefaultProps,\n    everythingElse = _objectWithoutProperties(_resolveDefaultProps, _excluded3);\n  var {\n    needClip\n  } = useNeedsClip(xAxisId, yAxisId);\n  var plotArea = usePlotArea();\n  var layout = useChartLayout();\n  var isPanorama = useIsPanorama();\n  var points = useAppSelector(state => selectLinePoints(state, xAxisId, yAxisId, isPanorama, id));\n  if (layout !== 'horizontal' && layout !== 'vertical' || points == null || plotArea == null) {\n    // Cannot render Line in an unsupported layout\n    return null;\n  }\n  var {\n    height,\n    width,\n    x: left,\n    y: top\n  } = plotArea;\n  return /*#__PURE__*/React.createElement(LineWithState, _extends({}, everythingElse, {\n    id: id,\n    connectNulls: connectNulls,\n    dot: dot,\n    activeDot: activeDot,\n    animateNewValues: animateNewValues,\n    animationBegin: animationBegin,\n    animationDuration: animationDuration,\n    animationEasing: animationEasing,\n    isAnimationActive: isAnimationActive,\n    hide: hide,\n    label: label,\n    legendType: legendType,\n    xAxisId: xAxisId,\n    yAxisId: yAxisId,\n    points: points,\n    layout: layout,\n    height: height,\n    width: width,\n    left: left,\n    top: top,\n    needClip: needClip\n  }));\n}\nexport function computeLinePoints(_ref6) {\n  var {\n    layout,\n    xAxis,\n    yAxis,\n    xAxisTicks,\n    yAxisTicks,\n    dataKey,\n    bandSize,\n    displayedData\n  } = _ref6;\n  return displayedData.map((entry, index) => {\n    // @ts-expect-error getValueByDataKey does not validate the output type\n    var value = getValueByDataKey(entry, dataKey);\n    if (layout === 'horizontal') {\n      var _x = getCateCoordinateOfLine({\n        axis: xAxis,\n        ticks: xAxisTicks,\n        bandSize,\n        entry,\n        index\n      });\n      var _y = isNullish(value) ? null : yAxis.scale(value);\n      return {\n        x: _x,\n        y: _y,\n        value,\n        payload: entry\n      };\n    }\n    var x = isNullish(value) ? null : xAxis.scale(value);\n    var y = getCateCoordinateOfLine({\n      axis: yAxis,\n      ticks: yAxisTicks,\n      bandSize,\n      entry,\n      index\n    });\n    if (x == null || y == null) {\n      return null;\n    }\n    return {\n      x,\n      y,\n      value,\n      payload: entry\n    };\n  }).filter(Boolean);\n}\nfunction LineFn(outsideProps) {\n  var props = resolveDefaultProps(outsideProps, defaultLineProps);\n  var isPanorama = useIsPanorama();\n  return /*#__PURE__*/React.createElement(RegisterGraphicalItemId, {\n    id: props.id,\n    type: \"line\"\n  }, id => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SetLegendPayload, {\n    legendPayload: computeLegendPayloadFromAreaData(props)\n  }), /*#__PURE__*/React.createElement(SetTooltipEntrySettings, {\n    fn: getTooltipEntrySettings,\n    args: props\n  }), /*#__PURE__*/React.createElement(SetCartesianGraphicalItem, {\n    type: \"line\",\n    id: id,\n    data: props.data,\n    xAxisId: props.xAxisId,\n    yAxisId: props.yAxisId,\n    zAxisId: 0,\n    dataKey: props.dataKey,\n    hide: props.hide,\n    isPanorama: isPanorama\n  }), /*#__PURE__*/React.createElement(LineImpl, _extends({}, props, {\n    id: id\n  }))));\n}\nexport var Line = /*#__PURE__*/React.memo(LineFn);\nLine.displayName = 'Line';","map":{"version":3,"names":["_excluded","_excluded2","_excluded3","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","value","configurable","writable","i","_toPrimitive","Symbol","toPrimitive","call","TypeError","String","Number","_objectWithoutProperties","_objectWithoutPropertiesLoose","n","indexOf","propertyIsEnumerable","hasOwnProperty","_extends","assign","bind","React","Component","useCallback","useMemo","useRef","useState","clsx","Curve","Dot","Layer","CartesianLabelListContextProvider","LabelListFromLabelProp","interpolate","isNullish","isClipDot","Global","getCateCoordinateOfLine","getTooltipNameProp","getValueByDataKey","ActivePoints","SetTooltipEntrySettings","SetErrorBarContext","GraphicalItemClipPath","useNeedsClip","useChartLayout","useIsPanorama","selectLinePoints","useAppSelector","SetLegendPayload","useAnimationId","resolveDefaultProps","usePlotArea","RegisterGraphicalItemId","SetCartesianGraphicalItem","svgPropertiesNoEvents","JavascriptAnimate","svgPropertiesAndEvents","svgPropertiesAndEventsFromUnknown","getRadiusAndStrokeWidthFromDot","computeLegendPayloadFromAreaData","props","dataKey","name","stroke","legendType","hide","inactive","type","color","payload","getTooltipEntrySettings","data","strokeWidth","fill","unit","dataDefinedOnItem","positions","undefined","settings","nameKey","tooltipType","generateSimpleStrokeDasharray","totalLength","concat","repeat","lines","count","linesUnit","result","getStrokeDasharray","lineLength","reduce","pre","next","Math","floor","remainLength","restLength","remainLines","sum","slice","emptyLines","map","line","join","renderDotItem","option","dotItem","isValidElement","cloneElement","className","createElement","shouldRenderDots","points","dot","Dots","_ref","clipPathId","needClip","id","propsWithoutId","clipDot","lineProps","customDotProps","dots","entry","dotProps","key","index","cx","x","cy","y","dotsProps","clipPath","LineLabelListProvider","_ref2","showLabels","children","labelListEntries","point","viewBox","width","height","parentViewBox","StaticCurve","_ref3","pathRef","strokeDasharray","layout","connectNulls","others","curveProps","Fragment","getTotalLength","mainCurve","_unused","CurveWithAnimation","_ref4","previousPointsRef","longestAnimatedLengthRef","isAnimationActive","animationBegin","animationDuration","animationEasing","animateNewValues","onAnimationEnd","onAnimationStart","prevPoints","current","animationId","isAnimating","setIsAnimating","handleAnimationEnd","handleAnimationStart","startingPoint","begin","duration","isActive","easing","lengthInterpolated","curLength","min","currentStrokeDasharray","split","num","parseFloat","prevPointsDiffFactor","stepData","prevPointIndex","prev","label","RenderCurve","_ref5","errorBarDataPointFormatter","dataPoint","errorVal","LineWithState","render","xAxisId","yAxisId","top","left","layerClass","dotSize","dataPointFormatter","errorBarOffset","activeDot","mainColor","itemDataKey","defaultLineProps","isSsr","LineImpl","_resolveDefaultProps","everythingElse","plotArea","isPanorama","state","computeLinePoints","_ref6","xAxis","yAxis","xAxisTicks","yAxisTicks","bandSize","displayedData","_x","axis","ticks","_y","scale","Boolean","LineFn","outsideProps","legendPayload","fn","args","zAxisId","Line","memo","displayName"],"sources":["D:/CN/MERN Project/InnerSpace/frontend/node_modules/recharts/es6/cartesian/Line.js"],"sourcesContent":["var _excluded = [\"id\"],\n  _excluded2 = [\"type\", \"layout\", \"connectNulls\", \"needClip\"],\n  _excluded3 = [\"activeDot\", \"animateNewValues\", \"animationBegin\", \"animationDuration\", \"animationEasing\", \"connectNulls\", \"dot\", \"hide\", \"isAnimationActive\", \"label\", \"legendType\", \"xAxisId\", \"yAxisId\", \"id\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from 'react';\nimport { Component, useCallback, useMemo, useRef, useState } from 'react';\nimport { clsx } from 'clsx';\nimport { Curve } from '../shape/Curve';\nimport { Dot } from '../shape/Dot';\nimport { Layer } from '../container/Layer';\nimport { CartesianLabelListContextProvider, LabelListFromLabelProp } from '../component/LabelList';\nimport { interpolate, isNullish } from '../util/DataUtils';\nimport { isClipDot } from '../util/ReactUtils';\nimport { Global } from '../util/Global';\nimport { getCateCoordinateOfLine, getTooltipNameProp, getValueByDataKey } from '../util/ChartUtils';\nimport { ActivePoints } from '../component/ActivePoints';\nimport { SetTooltipEntrySettings } from '../state/SetTooltipEntrySettings';\nimport { SetErrorBarContext } from '../context/ErrorBarContext';\nimport { GraphicalItemClipPath, useNeedsClip } from './GraphicalItemClipPath';\nimport { useChartLayout } from '../context/chartLayoutContext';\nimport { useIsPanorama } from '../context/PanoramaContext';\nimport { selectLinePoints } from '../state/selectors/lineSelectors';\nimport { useAppSelector } from '../state/hooks';\nimport { SetLegendPayload } from '../state/SetLegendPayload';\nimport { useAnimationId } from '../util/useAnimationId';\nimport { resolveDefaultProps } from '../util/resolveDefaultProps';\nimport { usePlotArea } from '../hooks';\nimport { RegisterGraphicalItemId } from '../context/RegisterGraphicalItemId';\nimport { SetCartesianGraphicalItem } from '../state/SetGraphicalItem';\nimport { svgPropertiesNoEvents } from '../util/svgPropertiesNoEvents';\nimport { JavascriptAnimate } from '../animation/JavascriptAnimate';\nimport { svgPropertiesAndEvents, svgPropertiesAndEventsFromUnknown } from '../util/svgPropertiesAndEvents';\nimport { getRadiusAndStrokeWidthFromDot } from '../util/getRadiusAndStrokeWidthFromDot';\n\n/**\n * Internal props, combination of external props + defaultProps + private Recharts state\n */\n\n/**\n * External props, intended for end users to fill in\n */\n\n/**\n * Because of naming conflict, we are forced to ignore certain (valid) SVG attributes.\n */\n\nvar computeLegendPayloadFromAreaData = props => {\n  var {\n    dataKey,\n    name,\n    stroke,\n    legendType,\n    hide\n  } = props;\n  return [{\n    inactive: hide,\n    dataKey,\n    type: legendType,\n    color: stroke,\n    value: getTooltipNameProp(name, dataKey),\n    payload: props\n  }];\n};\nfunction getTooltipEntrySettings(props) {\n  var {\n    dataKey,\n    data,\n    stroke,\n    strokeWidth,\n    fill,\n    name,\n    hide,\n    unit\n  } = props;\n  return {\n    dataDefinedOnItem: data,\n    positions: undefined,\n    settings: {\n      stroke,\n      strokeWidth,\n      fill,\n      dataKey,\n      nameKey: undefined,\n      name: getTooltipNameProp(name, dataKey),\n      hide,\n      type: props.tooltipType,\n      color: props.stroke,\n      unit\n    }\n  };\n}\nvar generateSimpleStrokeDasharray = (totalLength, length) => {\n  return \"\".concat(length, \"px \").concat(totalLength - length, \"px\");\n};\nfunction repeat(lines, count) {\n  var linesUnit = lines.length % 2 !== 0 ? [...lines, 0] : lines;\n  var result = [];\n  for (var i = 0; i < count; ++i) {\n    result = [...result, ...linesUnit];\n  }\n  return result;\n}\nvar getStrokeDasharray = (length, totalLength, lines) => {\n  var lineLength = lines.reduce((pre, next) => pre + next);\n\n  // if lineLength is 0 return the default when no strokeDasharray is provided\n  if (!lineLength) {\n    return generateSimpleStrokeDasharray(totalLength, length);\n  }\n  var count = Math.floor(length / lineLength);\n  var remainLength = length % lineLength;\n  var restLength = totalLength - length;\n  var remainLines = [];\n  for (var i = 0, sum = 0; i < lines.length; sum += lines[i], ++i) {\n    if (sum + lines[i] > remainLength) {\n      remainLines = [...lines.slice(0, i), remainLength - sum];\n      break;\n    }\n  }\n  var emptyLines = remainLines.length % 2 === 0 ? [0, restLength] : [restLength];\n  return [...repeat(lines, count), ...remainLines, ...emptyLines].map(line => \"\".concat(line, \"px\")).join(', ');\n};\nfunction renderDotItem(option, props) {\n  var dotItem;\n  if (/*#__PURE__*/React.isValidElement(option)) {\n    // @ts-expect-error when cloning, the event handler types do not match\n    dotItem = /*#__PURE__*/React.cloneElement(option, props);\n  } else if (typeof option === 'function') {\n    dotItem = option(props);\n  } else {\n    var className = clsx('recharts-line-dot', typeof option !== 'boolean' ? option.className : '');\n    dotItem = /*#__PURE__*/React.createElement(Dot, _extends({}, props, {\n      className: className\n    }));\n  }\n  return dotItem;\n}\nfunction shouldRenderDots(points, dot) {\n  if (points == null) {\n    return false;\n  }\n  if (dot) {\n    return true;\n  }\n  return points.length === 1;\n}\nfunction Dots(_ref) {\n  var {\n    clipPathId,\n    points,\n    props\n  } = _ref;\n  var {\n    dot,\n    dataKey,\n    needClip\n  } = props;\n  if (!shouldRenderDots(points, dot)) {\n    return null;\n  }\n\n  /*\n   * Exclude ID from the props passed to the Dots component\n   * because then the ID would be applied to multiple dots, and it would no longer be unique.\n   */\n  var {\n      id\n    } = props,\n    propsWithoutId = _objectWithoutProperties(props, _excluded);\n  var clipDot = isClipDot(dot);\n  var lineProps = svgPropertiesNoEvents(propsWithoutId);\n  var customDotProps = svgPropertiesAndEventsFromUnknown(dot);\n  var dots = points.map((entry, i) => {\n    var dotProps = _objectSpread(_objectSpread(_objectSpread({\n      key: \"dot-\".concat(i),\n      r: 3\n    }, lineProps), customDotProps), {}, {\n      index: i,\n      cx: entry.x,\n      cy: entry.y,\n      dataKey,\n      value: entry.value,\n      payload: entry.payload,\n      // @ts-expect-error we're passing extra property 'points' that the props are not expecting\n      points\n    });\n    return renderDotItem(dot, dotProps);\n  });\n  var dotsProps = {\n    clipPath: needClip ? \"url(#clipPath-\".concat(clipDot ? '' : 'dots-').concat(clipPathId, \")\") : undefined\n  };\n  return /*#__PURE__*/React.createElement(Layer, _extends({\n    className: \"recharts-line-dots\",\n    key: \"dots\"\n  }, dotsProps), dots);\n}\nfunction LineLabelListProvider(_ref2) {\n  var {\n    showLabels,\n    children,\n    points\n  } = _ref2;\n  var labelListEntries = useMemo(() => {\n    return points === null || points === void 0 ? void 0 : points.map(point => {\n      var viewBox = {\n        x: point.x,\n        y: point.y,\n        width: 0,\n        height: 0\n      };\n      return _objectSpread(_objectSpread({}, viewBox), {}, {\n        value: point.value,\n        payload: point.payload,\n        viewBox,\n        /*\n         * Line is not passing parentViewBox to the LabelList so the labels can escape - looks like a bug, should we pass parentViewBox?\n         * Or should this just be the root chart viewBox?\n         */\n        parentViewBox: undefined,\n        fill: undefined\n      });\n    });\n  }, [points]);\n  return /*#__PURE__*/React.createElement(CartesianLabelListContextProvider, {\n    value: showLabels ? labelListEntries : null\n  }, children);\n}\nfunction StaticCurve(_ref3) {\n  var {\n    clipPathId,\n    pathRef,\n    points,\n    strokeDasharray,\n    props\n  } = _ref3;\n  var {\n      type,\n      layout,\n      connectNulls,\n      needClip\n    } = props,\n    others = _objectWithoutProperties(props, _excluded2);\n  var curveProps = _objectSpread(_objectSpread({}, svgPropertiesAndEvents(others)), {}, {\n    fill: 'none',\n    className: 'recharts-line-curve',\n    clipPath: needClip ? \"url(#clipPath-\".concat(clipPathId, \")\") : undefined,\n    points,\n    type,\n    layout,\n    connectNulls,\n    strokeDasharray: strokeDasharray !== null && strokeDasharray !== void 0 ? strokeDasharray : props.strokeDasharray\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, (points === null || points === void 0 ? void 0 : points.length) > 1 && /*#__PURE__*/React.createElement(Curve, _extends({}, curveProps, {\n    pathRef: pathRef\n  })), /*#__PURE__*/React.createElement(Dots, {\n    points: points,\n    clipPathId: clipPathId,\n    props: props\n  }));\n}\nfunction getTotalLength(mainCurve) {\n  try {\n    return mainCurve && mainCurve.getTotalLength && mainCurve.getTotalLength() || 0;\n  } catch (_unused) {\n    return 0;\n  }\n}\nfunction CurveWithAnimation(_ref4) {\n  var {\n    clipPathId,\n    props,\n    pathRef,\n    previousPointsRef,\n    longestAnimatedLengthRef\n  } = _ref4;\n  var {\n    points,\n    strokeDasharray,\n    isAnimationActive,\n    animationBegin,\n    animationDuration,\n    animationEasing,\n    animateNewValues,\n    width,\n    height,\n    onAnimationEnd,\n    onAnimationStart\n  } = props;\n  var prevPoints = previousPointsRef.current;\n  var animationId = useAnimationId(props, 'recharts-line-');\n  var [isAnimating, setIsAnimating] = useState(false);\n  var showLabels = !isAnimating;\n  var handleAnimationEnd = useCallback(() => {\n    if (typeof onAnimationEnd === 'function') {\n      onAnimationEnd();\n    }\n    setIsAnimating(false);\n  }, [onAnimationEnd]);\n  var handleAnimationStart = useCallback(() => {\n    if (typeof onAnimationStart === 'function') {\n      onAnimationStart();\n    }\n    setIsAnimating(true);\n  }, [onAnimationStart]);\n  var totalLength = getTotalLength(pathRef.current);\n  /*\n   * Here we want to detect if the length animation has been interrupted.\n   * For that we keep a reference to the furthest length that has been animated.\n   *\n   * And then, to keep things smooth, we add to it the current length that is being animated right now.\n   *\n   * If we did Math.max then it makes the length animation \"pause\" but we want to keep it smooth\n   * so in case we have some \"leftover\" length from the previous animation we add it to the current length.\n   *\n   * This is not perfect because the animation changes speed due to easing. The default easing is 'ease' which is not linear\n   * and makes it stand out. But it's good enough I suppose.\n   * If we want to fix it then we need to keep track of multiple animations and their easing and timings.\n   *\n   * If you want to see this in action, try to change the dataKey of the line chart while the initial animation is running.\n   * The Line begins with zero length and slowly grows to the full length. While this growth is in progress,\n   * change the dataKey and the Line will continue growing from where it has grown so far.\n   */\n  var startingPoint = longestAnimatedLengthRef.current;\n  return /*#__PURE__*/React.createElement(LineLabelListProvider, {\n    points: points,\n    showLabels: showLabels\n  }, props.children, /*#__PURE__*/React.createElement(JavascriptAnimate, {\n    animationId: animationId,\n    begin: animationBegin,\n    duration: animationDuration,\n    isActive: isAnimationActive,\n    easing: animationEasing,\n    onAnimationEnd: handleAnimationEnd,\n    onAnimationStart: handleAnimationStart,\n    key: animationId\n  }, t => {\n    var lengthInterpolated = interpolate(startingPoint, totalLength + startingPoint, t);\n    var curLength = Math.min(lengthInterpolated, totalLength);\n    var currentStrokeDasharray;\n    if (isAnimationActive) {\n      if (strokeDasharray) {\n        var lines = \"\".concat(strokeDasharray).split(/[,\\s]+/gim).map(num => parseFloat(num));\n        currentStrokeDasharray = getStrokeDasharray(curLength, totalLength, lines);\n      } else {\n        currentStrokeDasharray = generateSimpleStrokeDasharray(totalLength, curLength);\n      }\n    } else {\n      currentStrokeDasharray = strokeDasharray == null ? undefined : String(strokeDasharray);\n    }\n    if (prevPoints) {\n      var prevPointsDiffFactor = prevPoints.length / points.length;\n      var stepData = t === 1 ? points : points.map((entry, index) => {\n        var prevPointIndex = Math.floor(index * prevPointsDiffFactor);\n        if (prevPoints[prevPointIndex]) {\n          var prev = prevPoints[prevPointIndex];\n          return _objectSpread(_objectSpread({}, entry), {}, {\n            x: interpolate(prev.x, entry.x, t),\n            y: interpolate(prev.y, entry.y, t)\n          });\n        }\n\n        // magic number of faking previous x and y location\n        if (animateNewValues) {\n          return _objectSpread(_objectSpread({}, entry), {}, {\n            x: interpolate(width * 2, entry.x, t),\n            y: interpolate(height / 2, entry.y, t)\n          });\n        }\n        return _objectSpread(_objectSpread({}, entry), {}, {\n          x: entry.x,\n          y: entry.y\n        });\n      });\n      // eslint-disable-next-line no-param-reassign\n      previousPointsRef.current = stepData;\n      return /*#__PURE__*/React.createElement(StaticCurve, {\n        props: props,\n        points: stepData,\n        clipPathId: clipPathId,\n        pathRef: pathRef,\n        strokeDasharray: currentStrokeDasharray\n      });\n    }\n\n    /*\n     * Here it is important to wait a little bit with updating the previousPointsRef\n     * before the animation has a time to initialize.\n     * If we set the previous pointsRef immediately, we set it before the Legend height it calculated\n     * and before pathRef is set.\n     * If that happens, the Line will re-render again after Legend had reported its height\n     * which will start a new animation with the previous points as the starting point\n     * which gives the effect of the Line animating slightly upwards (where the animation distance equals the Legend height).\n     * Waiting for t > 0 is indirect but good enough to ensure that the Legend height is calculated and animation works properly.\n     *\n     * Total length similarly is calculated from the pathRef. We should not update the previousPointsRef\n     * before the pathRef is set, otherwise we will have a wrong total length.\n     */\n    if (t > 0 && totalLength > 0) {\n      // eslint-disable-next-line no-param-reassign\n      previousPointsRef.current = points;\n      /*\n       * totalLength is set from a ref and is not updated in the first tick of the animation.\n       * It defaults to zero which is exactly what we want here because we want to grow from zero,\n       * however the same happens when the data change.\n       *\n       * In that case we want to remember the previous length and continue from there, and only animate the shape.\n       *\n       * Therefore the totalLength > 0 check.\n       *\n       * The Animate is about to fire handleAnimationStart which will update the state\n       * and cause a re-render and read a new proper totalLength which will be used in the next tick\n       * and update the longestAnimatedLengthRef.\n       */\n      // eslint-disable-next-line no-param-reassign\n      longestAnimatedLengthRef.current = curLength;\n    }\n    return /*#__PURE__*/React.createElement(StaticCurve, {\n      props: props,\n      points: points,\n      clipPathId: clipPathId,\n      pathRef: pathRef,\n      strokeDasharray: currentStrokeDasharray\n    });\n  }), /*#__PURE__*/React.createElement(LabelListFromLabelProp, {\n    label: props.label\n  }));\n}\nfunction RenderCurve(_ref5) {\n  var {\n    clipPathId,\n    props\n  } = _ref5;\n  var previousPointsRef = useRef(null);\n  var longestAnimatedLengthRef = useRef(0);\n  var pathRef = useRef(null);\n  return /*#__PURE__*/React.createElement(CurveWithAnimation, {\n    props: props,\n    clipPathId: clipPathId,\n    previousPointsRef: previousPointsRef,\n    longestAnimatedLengthRef: longestAnimatedLengthRef,\n    pathRef: pathRef\n  });\n}\nvar errorBarDataPointFormatter = (dataPoint, dataKey) => {\n  return {\n    x: dataPoint.x,\n    y: dataPoint.y,\n    value: dataPoint.value,\n    // @ts-expect-error getValueByDataKey does not validate the output type\n    errorVal: getValueByDataKey(dataPoint.payload, dataKey)\n  };\n};\n\n// eslint-disable-next-line react/prefer-stateless-function\nclass LineWithState extends Component {\n  render() {\n    var {\n      hide,\n      dot,\n      points,\n      className,\n      xAxisId,\n      yAxisId,\n      top,\n      left,\n      width,\n      height,\n      id,\n      needClip\n    } = this.props;\n    if (hide) {\n      return null;\n    }\n    var layerClass = clsx('recharts-line', className);\n    var clipPathId = id;\n    var {\n      r,\n      strokeWidth\n    } = getRadiusAndStrokeWidthFromDot(dot);\n    var clipDot = isClipDot(dot);\n    var dotSize = r * 2 + strokeWidth;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Layer, {\n      className: layerClass\n    }, needClip && /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(GraphicalItemClipPath, {\n      clipPathId: clipPathId,\n      xAxisId: xAxisId,\n      yAxisId: yAxisId\n    }), !clipDot && /*#__PURE__*/React.createElement(\"clipPath\", {\n      id: \"clipPath-dots-\".concat(clipPathId)\n    }, /*#__PURE__*/React.createElement(\"rect\", {\n      x: left - dotSize / 2,\n      y: top - dotSize / 2,\n      width: width + dotSize,\n      height: height + dotSize\n    }))), /*#__PURE__*/React.createElement(SetErrorBarContext, {\n      xAxisId: xAxisId,\n      yAxisId: yAxisId,\n      data: points,\n      dataPointFormatter: errorBarDataPointFormatter,\n      errorBarOffset: 0\n    }, /*#__PURE__*/React.createElement(RenderCurve, {\n      props: this.props,\n      clipPathId: clipPathId\n    }))), /*#__PURE__*/React.createElement(ActivePoints, {\n      activeDot: this.props.activeDot,\n      points: points,\n      mainColor: this.props.stroke,\n      itemDataKey: this.props.dataKey\n    }));\n  }\n}\nvar defaultLineProps = {\n  activeDot: true,\n  animateNewValues: true,\n  animationBegin: 0,\n  animationDuration: 1500,\n  animationEasing: 'ease',\n  connectNulls: false,\n  dot: true,\n  fill: '#fff',\n  hide: false,\n  isAnimationActive: !Global.isSsr,\n  label: false,\n  legendType: 'line',\n  stroke: '#3182bd',\n  strokeWidth: 1,\n  xAxisId: 0,\n  yAxisId: 0\n};\nfunction LineImpl(props) {\n  var _resolveDefaultProps = resolveDefaultProps(props, defaultLineProps),\n    {\n      activeDot,\n      animateNewValues,\n      animationBegin,\n      animationDuration,\n      animationEasing,\n      connectNulls,\n      dot,\n      hide,\n      isAnimationActive,\n      label,\n      legendType,\n      xAxisId,\n      yAxisId,\n      id\n    } = _resolveDefaultProps,\n    everythingElse = _objectWithoutProperties(_resolveDefaultProps, _excluded3);\n  var {\n    needClip\n  } = useNeedsClip(xAxisId, yAxisId);\n  var plotArea = usePlotArea();\n  var layout = useChartLayout();\n  var isPanorama = useIsPanorama();\n  var points = useAppSelector(state => selectLinePoints(state, xAxisId, yAxisId, isPanorama, id));\n  if (layout !== 'horizontal' && layout !== 'vertical' || points == null || plotArea == null) {\n    // Cannot render Line in an unsupported layout\n    return null;\n  }\n  var {\n    height,\n    width,\n    x: left,\n    y: top\n  } = plotArea;\n  return /*#__PURE__*/React.createElement(LineWithState, _extends({}, everythingElse, {\n    id: id,\n    connectNulls: connectNulls,\n    dot: dot,\n    activeDot: activeDot,\n    animateNewValues: animateNewValues,\n    animationBegin: animationBegin,\n    animationDuration: animationDuration,\n    animationEasing: animationEasing,\n    isAnimationActive: isAnimationActive,\n    hide: hide,\n    label: label,\n    legendType: legendType,\n    xAxisId: xAxisId,\n    yAxisId: yAxisId,\n    points: points,\n    layout: layout,\n    height: height,\n    width: width,\n    left: left,\n    top: top,\n    needClip: needClip\n  }));\n}\nexport function computeLinePoints(_ref6) {\n  var {\n    layout,\n    xAxis,\n    yAxis,\n    xAxisTicks,\n    yAxisTicks,\n    dataKey,\n    bandSize,\n    displayedData\n  } = _ref6;\n  return displayedData.map((entry, index) => {\n    // @ts-expect-error getValueByDataKey does not validate the output type\n    var value = getValueByDataKey(entry, dataKey);\n    if (layout === 'horizontal') {\n      var _x = getCateCoordinateOfLine({\n        axis: xAxis,\n        ticks: xAxisTicks,\n        bandSize,\n        entry,\n        index\n      });\n      var _y = isNullish(value) ? null : yAxis.scale(value);\n      return {\n        x: _x,\n        y: _y,\n        value,\n        payload: entry\n      };\n    }\n    var x = isNullish(value) ? null : xAxis.scale(value);\n    var y = getCateCoordinateOfLine({\n      axis: yAxis,\n      ticks: yAxisTicks,\n      bandSize,\n      entry,\n      index\n    });\n    if (x == null || y == null) {\n      return null;\n    }\n    return {\n      x,\n      y,\n      value,\n      payload: entry\n    };\n  }).filter(Boolean);\n}\nfunction LineFn(outsideProps) {\n  var props = resolveDefaultProps(outsideProps, defaultLineProps);\n  var isPanorama = useIsPanorama();\n  return /*#__PURE__*/React.createElement(RegisterGraphicalItemId, {\n    id: props.id,\n    type: \"line\"\n  }, id => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SetLegendPayload, {\n    legendPayload: computeLegendPayloadFromAreaData(props)\n  }), /*#__PURE__*/React.createElement(SetTooltipEntrySettings, {\n    fn: getTooltipEntrySettings,\n    args: props\n  }), /*#__PURE__*/React.createElement(SetCartesianGraphicalItem, {\n    type: \"line\",\n    id: id,\n    data: props.data,\n    xAxisId: props.xAxisId,\n    yAxisId: props.yAxisId,\n    zAxisId: 0,\n    dataKey: props.dataKey,\n    hide: props.hide,\n    isPanorama: isPanorama\n  }), /*#__PURE__*/React.createElement(LineImpl, _extends({}, props, {\n    id: id\n  }))));\n}\nexport var Line = /*#__PURE__*/React.memo(LineFn);\nLine.displayName = 'Line';"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}