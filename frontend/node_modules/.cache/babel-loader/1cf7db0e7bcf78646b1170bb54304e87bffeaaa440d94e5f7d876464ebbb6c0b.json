{"ast":null,"code":"/**\n * Calculates the width of the Y-axis based on the tick labels and the axis label.\n * @param params - The parameters object.\n * @param [params.ticks] - An array-like object of tick elements, each with a `getBoundingClientRect` method.\n * @param [params.label] - The axis label element, with a `getBoundingClientRect` method.\n * @param [params.labelGapWithTick=5] - The gap between the label and the tick.\n * @param [params.tickSize=0] - The length of the tick line.\n * @param [params.tickMargin=0] - The margin between the tick line and the tick text.\n * @returns The calculated width of the Y-axis.\n */\nexport var getCalculatedYAxisWidth = _ref => {\n  var {\n    ticks,\n    label,\n    labelGapWithTick = 5,\n    // Default gap between label and tick\n    tickSize = 0,\n    tickMargin = 0\n  } = _ref;\n  // find the max width of the tick labels\n  var maxTickWidth = 0;\n  if (ticks) {\n    Array.from(ticks).forEach(tickNode => {\n      if (tickNode) {\n        var bbox = tickNode.getBoundingClientRect();\n        if (bbox.width > maxTickWidth) {\n          maxTickWidth = bbox.width;\n        }\n      }\n    });\n\n    // calculate width of the axis label\n    var labelWidth = label ? label.getBoundingClientRect().width : 0;\n    var tickWidth = tickSize + tickMargin;\n\n    // calculate the updated width of the y-axis\n    var updatedYAxisWidth = maxTickWidth + tickWidth + labelWidth + (label ? labelGapWithTick : 0);\n    return Math.round(updatedYAxisWidth);\n  }\n  return 0;\n};","map":{"version":3,"names":["getCalculatedYAxisWidth","_ref","ticks","label","labelGapWithTick","tickSize","tickMargin","maxTickWidth","Array","from","forEach","tickNode","bbox","getBoundingClientRect","width","labelWidth","tickWidth","updatedYAxisWidth","Math","round"],"sources":["D:/CN/MERN Project/InnerSpace/frontend/node_modules/recharts/es6/util/YAxisUtils.js"],"sourcesContent":["/**\n * Calculates the width of the Y-axis based on the tick labels and the axis label.\n * @param params - The parameters object.\n * @param [params.ticks] - An array-like object of tick elements, each with a `getBoundingClientRect` method.\n * @param [params.label] - The axis label element, with a `getBoundingClientRect` method.\n * @param [params.labelGapWithTick=5] - The gap between the label and the tick.\n * @param [params.tickSize=0] - The length of the tick line.\n * @param [params.tickMargin=0] - The margin between the tick line and the tick text.\n * @returns The calculated width of the Y-axis.\n */\nexport var getCalculatedYAxisWidth = _ref => {\n  var {\n    ticks,\n    label,\n    labelGapWithTick = 5,\n    // Default gap between label and tick\n    tickSize = 0,\n    tickMargin = 0\n  } = _ref;\n  // find the max width of the tick labels\n  var maxTickWidth = 0;\n  if (ticks) {\n    Array.from(ticks).forEach(tickNode => {\n      if (tickNode) {\n        var bbox = tickNode.getBoundingClientRect();\n        if (bbox.width > maxTickWidth) {\n          maxTickWidth = bbox.width;\n        }\n      }\n    });\n\n    // calculate width of the axis label\n    var labelWidth = label ? label.getBoundingClientRect().width : 0;\n    var tickWidth = tickSize + tickMargin;\n\n    // calculate the updated width of the y-axis\n    var updatedYAxisWidth = maxTickWidth + tickWidth + labelWidth + (label ? labelGapWithTick : 0);\n    return Math.round(updatedYAxisWidth);\n  }\n  return 0;\n};"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIA,uBAAuB,GAAGC,IAAI,IAAI;EAC3C,IAAI;IACFC,KAAK;IACLC,KAAK;IACLC,gBAAgB,GAAG,CAAC;IACpB;IACAC,QAAQ,GAAG,CAAC;IACZC,UAAU,GAAG;EACf,CAAC,GAAGL,IAAI;EACR;EACA,IAAIM,YAAY,GAAG,CAAC;EACpB,IAAIL,KAAK,EAAE;IACTM,KAAK,CAACC,IAAI,CAACP,KAAK,CAAC,CAACQ,OAAO,CAACC,QAAQ,IAAI;MACpC,IAAIA,QAAQ,EAAE;QACZ,IAAIC,IAAI,GAAGD,QAAQ,CAACE,qBAAqB,CAAC,CAAC;QAC3C,IAAID,IAAI,CAACE,KAAK,GAAGP,YAAY,EAAE;UAC7BA,YAAY,GAAGK,IAAI,CAACE,KAAK;QAC3B;MACF;IACF,CAAC,CAAC;;IAEF;IACA,IAAIC,UAAU,GAAGZ,KAAK,GAAGA,KAAK,CAACU,qBAAqB,CAAC,CAAC,CAACC,KAAK,GAAG,CAAC;IAChE,IAAIE,SAAS,GAAGX,QAAQ,GAAGC,UAAU;;IAErC;IACA,IAAIW,iBAAiB,GAAGV,YAAY,GAAGS,SAAS,GAAGD,UAAU,IAAIZ,KAAK,GAAGC,gBAAgB,GAAG,CAAC,CAAC;IAC9F,OAAOc,IAAI,CAACC,KAAK,CAACF,iBAAiB,CAAC;EACtC;EACA,OAAO,CAAC;AACV,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}