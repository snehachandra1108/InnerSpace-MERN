{"ast":null,"code":"import { clone } from './clone.mjs';\nimport { mergeWith } from './mergeWith.mjs';\nimport { isPlainObject } from '../predicate/isPlainObject.mjs';\nfunction toMerged(target, source) {\n  return mergeWith(clone(target), source, function mergeRecursively(targetValue, sourceValue) {\n    if (Array.isArray(sourceValue)) {\n      if (Array.isArray(targetValue)) {\n        return mergeWith(clone(targetValue), sourceValue, mergeRecursively);\n      } else {\n        return mergeWith([], sourceValue, mergeRecursively);\n      }\n    } else if (isPlainObject(sourceValue)) {\n      if (isPlainObject(targetValue)) {\n        return mergeWith(clone(targetValue), sourceValue, mergeRecursively);\n      } else {\n        return mergeWith({}, sourceValue, mergeRecursively);\n      }\n    }\n  });\n}\nexport { toMerged };","map":{"version":3,"names":["clone","mergeWith","isPlainObject","toMerged","target","source","mergeRecursively","targetValue","sourceValue","Array","isArray"],"sources":["D:/CN/MERN Project/InnerSpace/frontend/node_modules/es-toolkit/dist/object/toMerged.mjs"],"sourcesContent":["import { clone } from './clone.mjs';\nimport { mergeWith } from './mergeWith.mjs';\nimport { isPlainObject } from '../predicate/isPlainObject.mjs';\n\nfunction toMerged(target, source) {\n    return mergeWith(clone(target), source, function mergeRecursively(targetValue, sourceValue) {\n        if (Array.isArray(sourceValue)) {\n            if (Array.isArray(targetValue)) {\n                return mergeWith(clone(targetValue), sourceValue, mergeRecursively);\n            }\n            else {\n                return mergeWith([], sourceValue, mergeRecursively);\n            }\n        }\n        else if (isPlainObject(sourceValue)) {\n            if (isPlainObject(targetValue)) {\n                return mergeWith(clone(targetValue), sourceValue, mergeRecursively);\n            }\n            else {\n                return mergeWith({}, sourceValue, mergeRecursively);\n            }\n        }\n    });\n}\n\nexport { toMerged };\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,aAAa;AACnC,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,aAAa,QAAQ,gCAAgC;AAE9D,SAASC,QAAQA,CAACC,MAAM,EAAEC,MAAM,EAAE;EAC9B,OAAOJ,SAAS,CAACD,KAAK,CAACI,MAAM,CAAC,EAAEC,MAAM,EAAE,SAASC,gBAAgBA,CAACC,WAAW,EAAEC,WAAW,EAAE;IACxF,IAAIC,KAAK,CAACC,OAAO,CAACF,WAAW,CAAC,EAAE;MAC5B,IAAIC,KAAK,CAACC,OAAO,CAACH,WAAW,CAAC,EAAE;QAC5B,OAAON,SAAS,CAACD,KAAK,CAACO,WAAW,CAAC,EAAEC,WAAW,EAAEF,gBAAgB,CAAC;MACvE,CAAC,MACI;QACD,OAAOL,SAAS,CAAC,EAAE,EAAEO,WAAW,EAAEF,gBAAgB,CAAC;MACvD;IACJ,CAAC,MACI,IAAIJ,aAAa,CAACM,WAAW,CAAC,EAAE;MACjC,IAAIN,aAAa,CAACK,WAAW,CAAC,EAAE;QAC5B,OAAON,SAAS,CAACD,KAAK,CAACO,WAAW,CAAC,EAAEC,WAAW,EAAEF,gBAAgB,CAAC;MACvE,CAAC,MACI;QACD,OAAOL,SAAS,CAAC,CAAC,CAAC,EAAEO,WAAW,EAAEF,gBAAgB,CAAC;MACvD;IACJ;EACJ,CAAC,CAAC;AACN;AAEA,SAASH,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}